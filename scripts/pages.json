[{"name":"AUDIO_CHAPTER_SELECT","description":"net.newpipe.newplayer.uiModel.UIModeState.AUDIO_CHAPTER_SELECT","location":"new-player/net.newpipe.newplayer.uiModel/-u-i-mode-state/-a-u-d-i-o_-c-h-a-p-t-e-r_-s-e-l-e-c-t/index.html","searchKeys":["AUDIO_CHAPTER_SELECT","AUDIO_CHAPTER_SELECT","net.newpipe.newplayer.uiModel.UIModeState.AUDIO_CHAPTER_SELECT"]},{"name":"AUDIO_STREAM_SELECT","description":"net.newpipe.newplayer.uiModel.UIModeState.AUDIO_STREAM_SELECT","location":"new-player/net.newpipe.newplayer.uiModel/-u-i-mode-state/-a-u-d-i-o_-s-t-r-e-a-m_-s-e-l-e-c-t/index.html","searchKeys":["AUDIO_STREAM_SELECT","AUDIO_STREAM_SELECT","net.newpipe.newplayer.uiModel.UIModeState.AUDIO_STREAM_SELECT"]},{"name":"BACKGROUND_AUDIO","description":"net.newpipe.newplayer.data.PlayMode.BACKGROUND_AUDIO","location":"new-player/net.newpipe.newplayer.data/-play-mode/-b-a-c-k-g-r-o-u-n-d_-a-u-d-i-o/index.html","searchKeys":["BACKGROUND_AUDIO","BACKGROUND_AUDIO","net.newpipe.newplayer.data.PlayMode.BACKGROUND_AUDIO"]},{"name":"BACKGROUND_VIDEO","description":"net.newpipe.newplayer.data.PlayMode.BACKGROUND_VIDEO","location":"new-player/net.newpipe.newplayer.data/-play-mode/-b-a-c-k-g-r-o-u-n-d_-v-i-d-e-o/index.html","searchKeys":["BACKGROUND_VIDEO","BACKGROUND_VIDEO","net.newpipe.newplayer.data.PlayMode.BACKGROUND_VIDEO"]},{"name":"CROP","description":"net.newpipe.newplayer.ui.ContentScale.CROP","location":"new-player/net.newpipe.newplayer.ui/-content-scale/-c-r-o-p/index.html","searchKeys":["CROP","CROP","net.newpipe.newplayer.ui.ContentScale.CROP"]},{"name":"DO_NOT_REPEAT","description":"net.newpipe.newplayer.data.RepeatMode.DO_NOT_REPEAT","location":"new-player/net.newpipe.newplayer.data/-repeat-mode/-d-o_-n-o-t_-r-e-p-e-a-t/index.html","searchKeys":["DO_NOT_REPEAT","DO_NOT_REPEAT","net.newpipe.newplayer.data.RepeatMode.DO_NOT_REPEAT"]},{"name":"EMBEDDED_AUDIO","description":"net.newpipe.newplayer.data.PlayMode.EMBEDDED_AUDIO","location":"new-player/net.newpipe.newplayer.data/-play-mode/-e-m-b-e-d-d-e-d_-a-u-d-i-o/index.html","searchKeys":["EMBEDDED_AUDIO","EMBEDDED_AUDIO","net.newpipe.newplayer.data.PlayMode.EMBEDDED_AUDIO"]},{"name":"EMBEDDED_AUDIO","description":"net.newpipe.newplayer.uiModel.UIModeState.EMBEDDED_AUDIO","location":"new-player/net.newpipe.newplayer.uiModel/-u-i-mode-state/-e-m-b-e-d-d-e-d_-a-u-d-i-o/index.html","searchKeys":["EMBEDDED_AUDIO","EMBEDDED_AUDIO","net.newpipe.newplayer.uiModel.UIModeState.EMBEDDED_AUDIO"]},{"name":"EMBEDDED_VIDEO","description":"net.newpipe.newplayer.data.PlayMode.EMBEDDED_VIDEO","location":"new-player/net.newpipe.newplayer.data/-play-mode/-e-m-b-e-d-d-e-d_-v-i-d-e-o/index.html","searchKeys":["EMBEDDED_VIDEO","EMBEDDED_VIDEO","net.newpipe.newplayer.data.PlayMode.EMBEDDED_VIDEO"]},{"name":"EMBEDDED_VIDEO","description":"net.newpipe.newplayer.uiModel.UIModeState.EMBEDDED_VIDEO","location":"new-player/net.newpipe.newplayer.uiModel/-u-i-mode-state/-e-m-b-e-d-d-e-d_-v-i-d-e-o/index.html","searchKeys":["EMBEDDED_VIDEO","EMBEDDED_VIDEO","net.newpipe.newplayer.uiModel.UIModeState.EMBEDDED_VIDEO"]},{"name":"EMBEDDED_VIDEO_CHAPTER_SELECT","description":"net.newpipe.newplayer.uiModel.UIModeState.EMBEDDED_VIDEO_CHAPTER_SELECT","location":"new-player/net.newpipe.newplayer.uiModel/-u-i-mode-state/-e-m-b-e-d-d-e-d_-v-i-d-e-o_-c-h-a-p-t-e-r_-s-e-l-e-c-t/index.html","searchKeys":["EMBEDDED_VIDEO_CHAPTER_SELECT","EMBEDDED_VIDEO_CHAPTER_SELECT","net.newpipe.newplayer.uiModel.UIModeState.EMBEDDED_VIDEO_CHAPTER_SELECT"]},{"name":"EMBEDDED_VIDEO_CONTROLLER_UI","description":"net.newpipe.newplayer.uiModel.UIModeState.EMBEDDED_VIDEO_CONTROLLER_UI","location":"new-player/net.newpipe.newplayer.uiModel/-u-i-mode-state/-e-m-b-e-d-d-e-d_-v-i-d-e-o_-c-o-n-t-r-o-l-l-e-r_-u-i/index.html","searchKeys":["EMBEDDED_VIDEO_CONTROLLER_UI","EMBEDDED_VIDEO_CONTROLLER_UI","net.newpipe.newplayer.uiModel.UIModeState.EMBEDDED_VIDEO_CONTROLLER_UI"]},{"name":"EMBEDDED_VIDEO_STREAM_SELECT","description":"net.newpipe.newplayer.uiModel.UIModeState.EMBEDDED_VIDEO_STREAM_SELECT","location":"new-player/net.newpipe.newplayer.uiModel/-u-i-mode-state/-e-m-b-e-d-d-e-d_-v-i-d-e-o_-s-t-r-e-a-m_-s-e-l-e-c-t/index.html","searchKeys":["EMBEDDED_VIDEO_STREAM_SELECT","EMBEDDED_VIDEO_STREAM_SELECT","net.newpipe.newplayer.uiModel.UIModeState.EMBEDDED_VIDEO_STREAM_SELECT"]},{"name":"FIT_INSIDE","description":"net.newpipe.newplayer.ui.ContentScale.FIT_INSIDE","location":"new-player/net.newpipe.newplayer.ui/-content-scale/-f-i-t_-i-n-s-i-d-e/index.html","searchKeys":["FIT_INSIDE","FIT_INSIDE","net.newpipe.newplayer.ui.ContentScale.FIT_INSIDE"]},{"name":"FULLSCREEN_AUDIO","description":"net.newpipe.newplayer.data.PlayMode.FULLSCREEN_AUDIO","location":"new-player/net.newpipe.newplayer.data/-play-mode/-f-u-l-l-s-c-r-e-e-n_-a-u-d-i-o/index.html","searchKeys":["FULLSCREEN_AUDIO","FULLSCREEN_AUDIO","net.newpipe.newplayer.data.PlayMode.FULLSCREEN_AUDIO"]},{"name":"FULLSCREEN_AUDIO","description":"net.newpipe.newplayer.uiModel.UIModeState.FULLSCREEN_AUDIO","location":"new-player/net.newpipe.newplayer.uiModel/-u-i-mode-state/-f-u-l-l-s-c-r-e-e-n_-a-u-d-i-o/index.html","searchKeys":["FULLSCREEN_AUDIO","FULLSCREEN_AUDIO","net.newpipe.newplayer.uiModel.UIModeState.FULLSCREEN_AUDIO"]},{"name":"FULLSCREEN_VIDEO","description":"net.newpipe.newplayer.data.PlayMode.FULLSCREEN_VIDEO","location":"new-player/net.newpipe.newplayer.data/-play-mode/-f-u-l-l-s-c-r-e-e-n_-v-i-d-e-o/index.html","searchKeys":["FULLSCREEN_VIDEO","FULLSCREEN_VIDEO","net.newpipe.newplayer.data.PlayMode.FULLSCREEN_VIDEO"]},{"name":"FULLSCREEN_VIDEO","description":"net.newpipe.newplayer.uiModel.UIModeState.FULLSCREEN_VIDEO","location":"new-player/net.newpipe.newplayer.uiModel/-u-i-mode-state/-f-u-l-l-s-c-r-e-e-n_-v-i-d-e-o/index.html","searchKeys":["FULLSCREEN_VIDEO","FULLSCREEN_VIDEO","net.newpipe.newplayer.uiModel.UIModeState.FULLSCREEN_VIDEO"]},{"name":"FULLSCREEN_VIDEO_CHAPTER_SELECT","description":"net.newpipe.newplayer.uiModel.UIModeState.FULLSCREEN_VIDEO_CHAPTER_SELECT","location":"new-player/net.newpipe.newplayer.uiModel/-u-i-mode-state/-f-u-l-l-s-c-r-e-e-n_-v-i-d-e-o_-c-h-a-p-t-e-r_-s-e-l-e-c-t/index.html","searchKeys":["FULLSCREEN_VIDEO_CHAPTER_SELECT","FULLSCREEN_VIDEO_CHAPTER_SELECT","net.newpipe.newplayer.uiModel.UIModeState.FULLSCREEN_VIDEO_CHAPTER_SELECT"]},{"name":"FULLSCREEN_VIDEO_CONTROLLER_UI","description":"net.newpipe.newplayer.uiModel.UIModeState.FULLSCREEN_VIDEO_CONTROLLER_UI","location":"new-player/net.newpipe.newplayer.uiModel/-u-i-mode-state/-f-u-l-l-s-c-r-e-e-n_-v-i-d-e-o_-c-o-n-t-r-o-l-l-e-r_-u-i/index.html","searchKeys":["FULLSCREEN_VIDEO_CONTROLLER_UI","FULLSCREEN_VIDEO_CONTROLLER_UI","net.newpipe.newplayer.uiModel.UIModeState.FULLSCREEN_VIDEO_CONTROLLER_UI"]},{"name":"FULLSCREEN_VIDEO_STREAM_SELECT","description":"net.newpipe.newplayer.uiModel.UIModeState.FULLSCREEN_VIDEO_STREAM_SELECT","location":"new-player/net.newpipe.newplayer.uiModel/-u-i-mode-state/-f-u-l-l-s-c-r-e-e-n_-v-i-d-e-o_-s-t-r-e-a-m_-s-e-l-e-c-t/index.html","searchKeys":["FULLSCREEN_VIDEO_STREAM_SELECT","FULLSCREEN_VIDEO_STREAM_SELECT","net.newpipe.newplayer.uiModel.UIModeState.FULLSCREEN_VIDEO_STREAM_SELECT"]},{"name":"IDLE","description":"net.newpipe.newplayer.data.PlayMode.IDLE","location":"new-player/net.newpipe.newplayer.data/-play-mode/-i-d-l-e/index.html","searchKeys":["IDLE","IDLE","net.newpipe.newplayer.data.PlayMode.IDLE"]},{"name":"PIP","description":"net.newpipe.newplayer.data.PlayMode.PIP","location":"new-player/net.newpipe.newplayer.data/-play-mode/-p-i-p/index.html","searchKeys":["PIP","PIP","net.newpipe.newplayer.data.PlayMode.PIP"]},{"name":"PIP","description":"net.newpipe.newplayer.uiModel.UIModeState.PIP","location":"new-player/net.newpipe.newplayer.uiModel/-u-i-mode-state/-p-i-p/index.html","searchKeys":["PIP","PIP","net.newpipe.newplayer.uiModel.UIModeState.PIP"]},{"name":"PLACEHOLDER","description":"net.newpipe.newplayer.uiModel.UIModeState.PLACEHOLDER","location":"new-player/net.newpipe.newplayer.uiModel/-u-i-mode-state/-p-l-a-c-e-h-o-l-d-e-r/index.html","searchKeys":["PLACEHOLDER","PLACEHOLDER","net.newpipe.newplayer.uiModel.UIModeState.PLACEHOLDER"]},{"name":"REPEAT_ALL","description":"net.newpipe.newplayer.data.RepeatMode.REPEAT_ALL","location":"new-player/net.newpipe.newplayer.data/-repeat-mode/-r-e-p-e-a-t_-a-l-l/index.html","searchKeys":["REPEAT_ALL","REPEAT_ALL","net.newpipe.newplayer.data.RepeatMode.REPEAT_ALL"]},{"name":"REPEAT_ONE","description":"net.newpipe.newplayer.data.RepeatMode.REPEAT_ONE","location":"new-player/net.newpipe.newplayer.data/-repeat-mode/-r-e-p-e-a-t_-o-n-e/index.html","searchKeys":["REPEAT_ONE","REPEAT_ONE","net.newpipe.newplayer.data.RepeatMode.REPEAT_ONE"]},{"name":"STRETCHED","description":"net.newpipe.newplayer.ui.ContentScale.STRETCHED","location":"new-player/net.newpipe.newplayer.ui/-content-scale/-s-t-r-e-t-c-h-e-d/index.html","searchKeys":["STRETCHED","STRETCHED","net.newpipe.newplayer.ui.ContentScale.STRETCHED"]},{"name":"abstract fun addToPlaylist(item: String)","description":"net.newpipe.newplayer.NewPlayer.addToPlaylist","location":"new-player/net.newpipe.newplayer/-new-player/add-to-playlist.html","searchKeys":["addToPlaylist","abstract fun addToPlaylist(item: String)","net.newpipe.newplayer.NewPlayer.addToPlaylist"]},{"name":"abstract fun getItemFromMediaItem(mediaItem: MediaItem): String","description":"net.newpipe.newplayer.NewPlayer.getItemFromMediaItem","location":"new-player/net.newpipe.newplayer/-new-player/get-item-from-media-item.html","searchKeys":["getItemFromMediaItem","abstract fun getItemFromMediaItem(mediaItem: MediaItem): String","net.newpipe.newplayer.NewPlayer.getItemFromMediaItem"]},{"name":"abstract fun getRepoInfo(): MediaRepository.RepoMetaInfo","description":"net.newpipe.newplayer.repository.MediaRepository.getRepoInfo","location":"new-player/net.newpipe.newplayer.repository/-media-repository/get-repo-info.html","searchKeys":["getRepoInfo","abstract fun getRepoInfo(): MediaRepository.RepoMetaInfo","net.newpipe.newplayer.repository.MediaRepository.getRepoInfo"]},{"name":"abstract fun movePlaylistItem(fromIndex: Int, toIndex: Int)","description":"net.newpipe.newplayer.NewPlayer.movePlaylistItem","location":"new-player/net.newpipe.newplayer/-new-player/move-playlist-item.html","searchKeys":["movePlaylistItem","abstract fun movePlaylistItem(fromIndex: Int, toIndex: Int)","net.newpipe.newplayer.NewPlayer.movePlaylistItem"]},{"name":"abstract fun onPictureInPictureModeChanged(isPictureInPictureMode: Boolean)","description":"net.newpipe.newplayer.uiModel.NewPlayerViewModel.onPictureInPictureModeChanged","location":"new-player/net.newpipe.newplayer.uiModel/-new-player-view-model/on-picture-in-picture-mode-changed.html","searchKeys":["onPictureInPictureModeChanged","abstract fun onPictureInPictureModeChanged(isPictureInPictureMode: Boolean)","net.newpipe.newplayer.uiModel.NewPlayerViewModel.onPictureInPictureModeChanged"]},{"name":"abstract fun pause()","description":"net.newpipe.newplayer.NewPlayer.pause","location":"new-player/net.newpipe.newplayer/-new-player/pause.html","searchKeys":["pause","abstract fun pause()","net.newpipe.newplayer.NewPlayer.pause"]},{"name":"abstract fun play()","description":"net.newpipe.newplayer.NewPlayer.play","location":"new-player/net.newpipe.newplayer/-new-player/play.html","searchKeys":["play","abstract fun play()","net.newpipe.newplayer.NewPlayer.play"]},{"name":"abstract fun playStream(item: String, playMode: PlayMode)","description":"net.newpipe.newplayer.NewPlayer.playStream","location":"new-player/net.newpipe.newplayer/-new-player/play-stream.html","searchKeys":["playStream","abstract fun playStream(item: String, playMode: PlayMode)","net.newpipe.newplayer.NewPlayer.playStream"]},{"name":"abstract fun prepare()","description":"net.newpipe.newplayer.NewPlayer.prepare","location":"new-player/net.newpipe.newplayer/-new-player/prepare.html","searchKeys":["prepare","abstract fun prepare()","net.newpipe.newplayer.NewPlayer.prepare"]},{"name":"abstract fun release()","description":"net.newpipe.newplayer.NewPlayer.release","location":"new-player/net.newpipe.newplayer/-new-player/release.html","searchKeys":["release","abstract fun release()","net.newpipe.newplayer.NewPlayer.release"]},{"name":"abstract fun removePlaylistItem(uniqueId: Long)","description":"net.newpipe.newplayer.NewPlayer.removePlaylistItem","location":"new-player/net.newpipe.newplayer/-new-player/remove-playlist-item.html","searchKeys":["removePlaylistItem","abstract fun removePlaylistItem(uniqueId: Long)","net.newpipe.newplayer.NewPlayer.removePlaylistItem"]},{"name":"abstract fun selectChapter(index: Int)","description":"net.newpipe.newplayer.NewPlayer.selectChapter","location":"new-player/net.newpipe.newplayer/-new-player/select-chapter.html","searchKeys":["selectChapter","abstract fun selectChapter(index: Int)","net.newpipe.newplayer.NewPlayer.selectChapter"]},{"name":"abstract fun toLongIdentifierString(): String","description":"net.newpipe.newplayer.data.StreamTrack.toLongIdentifierString","location":"new-player/net.newpipe.newplayer.data/-stream-track/to-long-identifier-string.html","searchKeys":["toLongIdentifierString","abstract fun toLongIdentifierString(): String","net.newpipe.newplayer.data.StreamTrack.toLongIdentifierString"]},{"name":"abstract fun toShortIdentifierString(): String","description":"net.newpipe.newplayer.data.StreamTrack.toShortIdentifierString","location":"new-player/net.newpipe.newplayer.data/-stream-track/to-short-identifier-string.html","searchKeys":["toShortIdentifierString","abstract fun toShortIdentifierString(): String","net.newpipe.newplayer.data.StreamTrack.toShortIdentifierString"]},{"name":"abstract suspend fun getChapters(item: String): List<Chapter>","description":"net.newpipe.newplayer.repository.MediaRepository.getChapters","location":"new-player/net.newpipe.newplayer.repository/-media-repository/get-chapters.html","searchKeys":["getChapters","abstract suspend fun getChapters(item: String): List<Chapter>","net.newpipe.newplayer.repository.MediaRepository.getChapters"]},{"name":"abstract suspend fun getMetaInfo(item: String): MediaMetadata","description":"net.newpipe.newplayer.repository.MediaRepository.getMetaInfo","location":"new-player/net.newpipe.newplayer.repository/-media-repository/get-meta-info.html","searchKeys":["getMetaInfo","abstract suspend fun getMetaInfo(item: String): MediaMetadata","net.newpipe.newplayer.repository.MediaRepository.getMetaInfo"]},{"name":"abstract suspend fun getPreviewThumbnail(item: String, timestampInMs: Long): Bitmap?","description":"net.newpipe.newplayer.repository.MediaRepository.getPreviewThumbnail","location":"new-player/net.newpipe.newplayer.repository/-media-repository/get-preview-thumbnail.html","searchKeys":["getPreviewThumbnail","abstract suspend fun getPreviewThumbnail(item: String, timestampInMs: Long): Bitmap?","net.newpipe.newplayer.repository.MediaRepository.getPreviewThumbnail"]},{"name":"abstract suspend fun getPreviewThumbnailsInfo(item: String): MediaRepository.PreviewThumbnailsInfo","description":"net.newpipe.newplayer.repository.MediaRepository.getPreviewThumbnailsInfo","location":"new-player/net.newpipe.newplayer.repository/-media-repository/get-preview-thumbnails-info.html","searchKeys":["getPreviewThumbnailsInfo","abstract suspend fun getPreviewThumbnailsInfo(item: String): MediaRepository.PreviewThumbnailsInfo","net.newpipe.newplayer.repository.MediaRepository.getPreviewThumbnailsInfo"]},{"name":"abstract suspend fun getStreams(item: String): List<Stream>","description":"net.newpipe.newplayer.repository.MediaRepository.getStreams","location":"new-player/net.newpipe.newplayer.repository/-media-repository/get-streams.html","searchKeys":["getStreams","abstract suspend fun getStreams(item: String): List<Stream>","net.newpipe.newplayer.repository.MediaRepository.getStreams"]},{"name":"abstract suspend fun getSubtitles(item: String): List<Subtitle>","description":"net.newpipe.newplayer.repository.MediaRepository.getSubtitles","location":"new-player/net.newpipe.newplayer.repository/-media-repository/get-subtitles.html","searchKeys":["getSubtitles","abstract suspend fun getSubtitles(item: String): List<Subtitle>","net.newpipe.newplayer.repository.MediaRepository.getSubtitles"]},{"name":"abstract suspend fun getTimestampLink(item: String, timestampInSeconds: Long): String","description":"net.newpipe.newplayer.repository.MediaRepository.getTimestampLink","location":"new-player/net.newpipe.newplayer.repository/-media-repository/get-timestamp-link.html","searchKeys":["getTimestampLink","abstract suspend fun getTimestampLink(item: String, timestampInSeconds: Long): String","net.newpipe.newplayer.repository.MediaRepository.getTimestampLink"]},{"name":"abstract val bufferedPercentage: Int","description":"net.newpipe.newplayer.NewPlayer.bufferedPercentage","location":"new-player/net.newpipe.newplayer/-new-player/buffered-percentage.html","searchKeys":["bufferedPercentage","abstract val bufferedPercentage: Int","net.newpipe.newplayer.NewPlayer.bufferedPercentage"]},{"name":"abstract val currentChapters: StateFlow<List<Chapter>>","description":"net.newpipe.newplayer.NewPlayer.currentChapters","location":"new-player/net.newpipe.newplayer/-new-player/current-chapters.html","searchKeys":["currentChapters","abstract val currentChapters: StateFlow<List<Chapter>>","net.newpipe.newplayer.NewPlayer.currentChapters"]},{"name":"abstract val currentlyAvailableTracks: StateFlow<List<StreamTrack>>","description":"net.newpipe.newplayer.NewPlayer.currentlyAvailableTracks","location":"new-player/net.newpipe.newplayer/-new-player/currently-available-tracks.html","searchKeys":["currentlyAvailableTracks","abstract val currentlyAvailableTracks: StateFlow<List<StreamTrack>>","net.newpipe.newplayer.NewPlayer.currentlyAvailableTracks"]},{"name":"abstract val currentlyPlaying: StateFlow<MediaItem?>","description":"net.newpipe.newplayer.NewPlayer.currentlyPlaying","location":"new-player/net.newpipe.newplayer/-new-player/currently-playing.html","searchKeys":["currentlyPlaying","abstract val currentlyPlaying: StateFlow<MediaItem?>","net.newpipe.newplayer.NewPlayer.currentlyPlaying"]},{"name":"abstract val currentlyPlayingTracks: StateFlow<List<StreamTrack>>","description":"net.newpipe.newplayer.NewPlayer.currentlyPlayingTracks","location":"new-player/net.newpipe.newplayer/-new-player/currently-playing-tracks.html","searchKeys":["currentlyPlayingTracks","abstract val currentlyPlayingTracks: StateFlow<List<StreamTrack>>","net.newpipe.newplayer.NewPlayer.currentlyPlayingTracks"]},{"name":"abstract val duration: Long","description":"net.newpipe.newplayer.NewPlayer.duration","location":"new-player/net.newpipe.newplayer/-new-player/duration.html","searchKeys":["duration","abstract val duration: Long","net.newpipe.newplayer.NewPlayer.duration"]},{"name":"abstract val embeddedPlayerDraggedDownBy: SharedFlow<Float>","description":"net.newpipe.newplayer.uiModel.NewPlayerViewModel.embeddedPlayerDraggedDownBy","location":"new-player/net.newpipe.newplayer.uiModel/-new-player-view-model/embedded-player-dragged-down-by.html","searchKeys":["embeddedPlayerDraggedDownBy","abstract val embeddedPlayerDraggedDownBy: SharedFlow<Float>","net.newpipe.newplayer.uiModel.NewPlayerViewModel.embeddedPlayerDraggedDownBy"]},{"name":"abstract val errorFlow: SharedFlow<Exception>","description":"net.newpipe.newplayer.NewPlayer.errorFlow","location":"new-player/net.newpipe.newplayer/-new-player/error-flow.html","searchKeys":["errorFlow","abstract val errorFlow: SharedFlow<Exception>","net.newpipe.newplayer.NewPlayer.errorFlow"]},{"name":"abstract val exoPlayer: StateFlow<Player?>","description":"net.newpipe.newplayer.NewPlayer.exoPlayer","location":"new-player/net.newpipe.newplayer/-new-player/exo-player.html","searchKeys":["exoPlayer","abstract val exoPlayer: StateFlow<Player?>","net.newpipe.newplayer.NewPlayer.exoPlayer"]},{"name":"abstract val fileFormat: String","description":"net.newpipe.newplayer.data.StreamTrack.fileFormat","location":"new-player/net.newpipe.newplayer.data/-stream-track/file-format.html","searchKeys":["fileFormat","abstract val fileFormat: String","net.newpipe.newplayer.data.StreamTrack.fileFormat"]},{"name":"abstract val hasAudioTracks: Boolean","description":"net.newpipe.newplayer.data.StreamSelection.hasAudioTracks","location":"new-player/net.newpipe.newplayer.data/-stream-selection/has-audio-tracks.html","searchKeys":["hasAudioTracks","abstract val hasAudioTracks: Boolean","net.newpipe.newplayer.data.StreamSelection.hasAudioTracks"]},{"name":"abstract val hasVideoTracks: Boolean","description":"net.newpipe.newplayer.data.StreamSelection.hasVideoTracks","location":"new-player/net.newpipe.newplayer.data/-stream-selection/has-video-tracks.html","searchKeys":["hasVideoTracks","abstract val hasVideoTracks: Boolean","net.newpipe.newplayer.data.StreamSelection.hasVideoTracks"]},{"name":"abstract val isDynamic: Boolean","description":"net.newpipe.newplayer.data.StreamSelection.isDynamic","location":"new-player/net.newpipe.newplayer.data/-stream-selection/is-dynamic.html","searchKeys":["isDynamic","abstract val isDynamic: Boolean","net.newpipe.newplayer.data.StreamSelection.isDynamic"]},{"name":"abstract val item: String","description":"net.newpipe.newplayer.data.StreamSelection.item","location":"new-player/net.newpipe.newplayer.data/-stream-selection/item.html","searchKeys":["item","abstract val item: String","net.newpipe.newplayer.data.StreamSelection.item"]},{"name":"abstract val notificationIcon: IconCompat","description":"net.newpipe.newplayer.NewPlayer.notificationIcon","location":"new-player/net.newpipe.newplayer/-new-player/notification-icon.html","searchKeys":["notificationIcon","abstract val notificationIcon: IconCompat","net.newpipe.newplayer.NewPlayer.notificationIcon"]},{"name":"abstract val onBackPressed: SharedFlow<Unit>","description":"net.newpipe.newplayer.uiModel.NewPlayerViewModel.onBackPressed","location":"new-player/net.newpipe.newplayer.uiModel/-new-player-view-model/on-back-pressed.html","searchKeys":["onBackPressed","abstract val onBackPressed: SharedFlow<Unit>","net.newpipe.newplayer.uiModel.NewPlayerViewModel.onBackPressed"]},{"name":"abstract val onExoPlayerEvent: SharedFlow<Pair<Player, Player.Events>>","description":"net.newpipe.newplayer.NewPlayer.onExoPlayerEvent","location":"new-player/net.newpipe.newplayer/-new-player/on-exo-player-event.html","searchKeys":["onExoPlayerEvent","abstract val onExoPlayerEvent: SharedFlow<Pair<Player, Player.Events>>","net.newpipe.newplayer.NewPlayer.onExoPlayerEvent"]},{"name":"abstract val playBackMode: MutableStateFlow<PlayMode>","description":"net.newpipe.newplayer.NewPlayer.playBackMode","location":"new-player/net.newpipe.newplayer/-new-player/play-back-mode.html","searchKeys":["playBackMode","abstract val playBackMode: MutableStateFlow<PlayMode>","net.newpipe.newplayer.NewPlayer.playBackMode"]},{"name":"abstract val playerActivityClass: Class<out Activity>","description":"net.newpipe.newplayer.NewPlayer.playerActivityClass","location":"new-player/net.newpipe.newplayer/-new-player/player-activity-class.html","searchKeys":["playerActivityClass","abstract val playerActivityClass: Class<out Activity>","net.newpipe.newplayer.NewPlayer.playerActivityClass"]},{"name":"abstract val playlist: StateFlow<List<MediaItem>>","description":"net.newpipe.newplayer.NewPlayer.playlist","location":"new-player/net.newpipe.newplayer/-new-player/playlist.html","searchKeys":["playlist","abstract val playlist: StateFlow<List<MediaItem>>","net.newpipe.newplayer.NewPlayer.playlist"]},{"name":"abstract val repository: MediaRepository","description":"net.newpipe.newplayer.NewPlayer.repository","location":"new-player/net.newpipe.newplayer/-new-player/repository.html","searchKeys":["repository","abstract val repository: MediaRepository","net.newpipe.newplayer.NewPlayer.repository"]},{"name":"abstract val rescueStreamFault: suspend (item: String?, mediaItem: MediaItem?, Exception, repository: MediaRepository) -> StreamExceptionResponse","description":"net.newpipe.newplayer.NewPlayer.rescueStreamFault","location":"new-player/net.newpipe.newplayer/-new-player/rescue-stream-fault.html","searchKeys":["rescueStreamFault","abstract val rescueStreamFault: suspend (item: String?, mediaItem: MediaItem?, Exception, repository: MediaRepository) -> StreamExceptionResponse","net.newpipe.newplayer.NewPlayer.rescueStreamFault"]},{"name":"abstract val tracks: List<StreamTrack>","description":"net.newpipe.newplayer.data.StreamSelection.tracks","location":"new-player/net.newpipe.newplayer.data/-stream-selection/tracks.html","searchKeys":["tracks","abstract val tracks: List<StreamTrack>","net.newpipe.newplayer.data.StreamSelection.tracks"]},{"name":"abstract val uiState: StateFlow<NewPlayerUIState>","description":"net.newpipe.newplayer.uiModel.NewPlayerViewModel.uiState","location":"new-player/net.newpipe.newplayer.uiModel/-new-player-view-model/ui-state.html","searchKeys":["uiState","abstract val uiState: StateFlow<NewPlayerUIState>","net.newpipe.newplayer.uiModel.NewPlayerViewModel.uiState"]},{"name":"abstract var contentFitMode: ContentScale","description":"net.newpipe.newplayer.uiModel.NewPlayerViewModel.contentFitMode","location":"new-player/net.newpipe.newplayer.uiModel/-new-player-view-model/content-fit-mode.html","searchKeys":["contentFitMode","abstract var contentFitMode: ContentScale","net.newpipe.newplayer.uiModel.NewPlayerViewModel.contentFitMode"]},{"name":"abstract var currentPosition: Long","description":"net.newpipe.newplayer.NewPlayer.currentPosition","location":"new-player/net.newpipe.newplayer/-new-player/current-position.html","searchKeys":["currentPosition","abstract var currentPosition: Long","net.newpipe.newplayer.NewPlayer.currentPosition"]},{"name":"abstract var currentStreamLanguageConstraint: String?","description":"net.newpipe.newplayer.NewPlayer.currentStreamLanguageConstraint","location":"new-player/net.newpipe.newplayer/-new-player/current-stream-language-constraint.html","searchKeys":["currentStreamLanguageConstraint","abstract var currentStreamLanguageConstraint: String?","net.newpipe.newplayer.NewPlayer.currentStreamLanguageConstraint"]},{"name":"abstract var currentlyPlayingPlaylistItem: Int","description":"net.newpipe.newplayer.NewPlayer.currentlyPlayingPlaylistItem","location":"new-player/net.newpipe.newplayer/-new-player/currently-playing-playlist-item.html","searchKeys":["currentlyPlayingPlaylistItem","abstract var currentlyPlayingPlaylistItem: Int","net.newpipe.newplayer.NewPlayer.currentlyPlayingPlaylistItem"]},{"name":"abstract var fastSeekAmountSec: Int","description":"net.newpipe.newplayer.NewPlayer.fastSeekAmountSec","location":"new-player/net.newpipe.newplayer/-new-player/fast-seek-amount-sec.html","searchKeys":["fastSeekAmountSec","abstract var fastSeekAmountSec: Int","net.newpipe.newplayer.NewPlayer.fastSeekAmountSec"]},{"name":"abstract var newPlayer: NewPlayer?","description":"net.newpipe.newplayer.uiModel.NewPlayerViewModel.newPlayer","location":"new-player/net.newpipe.newplayer.uiModel/-new-player-view-model/new-player.html","searchKeys":["newPlayer","abstract var newPlayer: NewPlayer?","net.newpipe.newplayer.uiModel.NewPlayerViewModel.newPlayer"]},{"name":"abstract var playWhenReady: Boolean","description":"net.newpipe.newplayer.NewPlayer.playWhenReady","location":"new-player/net.newpipe.newplayer/-new-player/play-when-ready.html","searchKeys":["playWhenReady","abstract var playWhenReady: Boolean","net.newpipe.newplayer.NewPlayer.playWhenReady"]},{"name":"abstract var preferredStreamLanguages: List<String>","description":"net.newpipe.newplayer.NewPlayer.preferredStreamLanguages","location":"new-player/net.newpipe.newplayer/-new-player/preferred-stream-languages.html","searchKeys":["preferredStreamLanguages","abstract var preferredStreamLanguages: List<String>","net.newpipe.newplayer.NewPlayer.preferredStreamLanguages"]},{"name":"abstract var repeatMode: RepeatMode","description":"net.newpipe.newplayer.NewPlayer.repeatMode","location":"new-player/net.newpipe.newplayer/-new-player/repeat-mode.html","searchKeys":["repeatMode","abstract var repeatMode: RepeatMode","net.newpipe.newplayer.NewPlayer.repeatMode"]},{"name":"abstract var shuffle: Boolean","description":"net.newpipe.newplayer.NewPlayer.shuffle","location":"new-player/net.newpipe.newplayer/-new-player/shuffle.html","searchKeys":["shuffle","abstract var shuffle: Boolean","net.newpipe.newplayer.NewPlayer.shuffle"]},{"name":"class ActivityBrainSlug","description":"net.newpipe.newplayer.ActivityBrainSlug","location":"new-player/net.newpipe.newplayer/-activity-brain-slug/index.html","searchKeys":["ActivityBrainSlug","class ActivityBrainSlug","net.newpipe.newplayer.ActivityBrainSlug"]},{"name":"class CachingRepository(val actualRepository: MediaRepository, requestDispatcher: CoroutineDispatcher = Dispatchers.Main) : MediaRepository","description":"net.newpipe.newplayer.repository.CachingRepository","location":"new-player/net.newpipe.newplayer.repository/-caching-repository/index.html","searchKeys":["CachingRepository","class CachingRepository(val actualRepository: MediaRepository, requestDispatcher: CoroutineDispatcher = Dispatchers.Main) : MediaRepository","net.newpipe.newplayer.repository.CachingRepository"]},{"name":"class DelayTestRepository(val actualRepo: MediaRepository, var delayInMS: Long) : MediaRepository","description":"net.newpipe.newplayer.repository.DelayTestRepository","location":"new-player/net.newpipe.newplayer.repository/-delay-test-repository/index.html","searchKeys":["DelayTestRepository","class DelayTestRepository(val actualRepo: MediaRepository, var delayInMS: Long) : MediaRepository","net.newpipe.newplayer.repository.DelayTestRepository"]},{"name":"class EagerRequestingRepository(val cachingRepository: MediaRepository, var disableEagerCaching: Boolean = false, val requestDispatcher: CoroutineDispatcher = Dispatchers.Main) : MediaRepository","description":"net.newpipe.newplayer.repository.EagerRequestingRepository","location":"new-player/net.newpipe.newplayer.repository/-eager-requesting-repository/index.html","searchKeys":["EagerRequestingRepository","class EagerRequestingRepository(val cachingRepository: MediaRepository, var disableEagerCaching: Boolean = false, val requestDispatcher: CoroutineDispatcher = Dispatchers.Main) : MediaRepository","net.newpipe.newplayer.repository.EagerRequestingRepository"]},{"name":"class MultiRepository(val actualRepositories: List<MultiRepoEntry>) : MediaRepository","description":"net.newpipe.newplayer.repository.MultiRepository","location":"new-player/net.newpipe.newplayer.repository/-multi-repository/index.html","searchKeys":["MultiRepository","class MultiRepository(val actualRepositories: List<MultiRepoEntry>) : MediaRepository","net.newpipe.newplayer.repository.MultiRepository"]},{"name":"class NewPlayerException : Exception","description":"net.newpipe.newplayer.data.NewPlayerException","location":"new-player/net.newpipe.newplayer.data/-new-player-exception/index.html","searchKeys":["NewPlayerException","class NewPlayerException : Exception","net.newpipe.newplayer.data.NewPlayerException"]},{"name":"class NewPlayerImpl(val app: Application, val playerActivityClass: Class<out Activity>, val repository: MediaRepository, val notificationIcon: IconCompat = IconCompat.createWithResource(\n        app,\n        R.drawable.new_player_tiny_icon\n    ), val rescueStreamFault: suspend (item: String?, mediaItem: MediaItem?, Exception, repository: MediaRepository) -> StreamExceptionResponse = { _, _, _, _ -> NoResponse() }) : NewPlayer","description":"net.newpipe.newplayer.NewPlayerImpl","location":"new-player/net.newpipe.newplayer/-new-player-impl/index.html","searchKeys":["NewPlayerImpl","class NewPlayerImpl(val app: Application, val playerActivityClass: Class<out Activity>, val repository: MediaRepository, val notificationIcon: IconCompat = IconCompat.createWithResource(\n        app,\n        R.drawable.new_player_tiny_icon\n    ), val rescueStreamFault: suspend (item: String?, mediaItem: MediaItem?, Exception, repository: MediaRepository) -> StreamExceptionResponse = { _, _, _, _ -> NoResponse() }) : NewPlayer","net.newpipe.newplayer.NewPlayerImpl"]},{"name":"class NewPlayerView : FrameLayout","description":"net.newpipe.newplayer.ui.NewPlayerView","location":"new-player/net.newpipe.newplayer.ui/-new-player-view/index.html","searchKeys":["NewPlayerView","class NewPlayerView : FrameLayout","net.newpipe.newplayer.ui.NewPlayerView"]},{"name":"class NewPlayerViewModelImpl constructor(application: Application) : AndroidViewModel, InternalNewPlayerViewModel","description":"net.newpipe.newplayer.uiModel.NewPlayerViewModelImpl","location":"new-player/net.newpipe.newplayer.uiModel/-new-player-view-model-impl/index.html","searchKeys":["NewPlayerViewModelImpl","class NewPlayerViewModelImpl constructor(application: Application) : AndroidViewModel, InternalNewPlayerViewModel","net.newpipe.newplayer.uiModel.NewPlayerViewModelImpl"]},{"name":"class NoResponse : StreamExceptionResponse","description":"net.newpipe.newplayer.logic.NoResponse","location":"new-player/net.newpipe.newplayer.logic/-no-response/index.html","searchKeys":["NoResponse","class NoResponse : StreamExceptionResponse","net.newpipe.newplayer.logic.NoResponse"]},{"name":"class PlaceHolderRepository : MediaRepository","description":"net.newpipe.newplayer.repository.PlaceHolderRepository","location":"new-player/net.newpipe.newplayer.repository/-place-holder-repository/index.html","searchKeys":["PlaceHolderRepository","class PlaceHolderRepository : MediaRepository","net.newpipe.newplayer.repository.PlaceHolderRepository"]},{"name":"const val NEW_PLAYER_MEDIA_NOTIFICATION_CHANNEL_NAME: String","description":"net.newpipe.newplayer.service.NEW_PLAYER_MEDIA_NOTIFICATION_CHANNEL_NAME","location":"new-player/net.newpipe.newplayer.service/-n-e-w_-p-l-a-y-e-r_-m-e-d-i-a_-n-o-t-i-f-i-c-a-t-i-o-n_-c-h-a-n-n-e-l_-n-a-m-e.html","searchKeys":["NEW_PLAYER_MEDIA_NOTIFICATION_CHANNEL_NAME","const val NEW_PLAYER_MEDIA_NOTIFICATION_CHANNEL_NAME: String","net.newpipe.newplayer.service.NEW_PLAYER_MEDIA_NOTIFICATION_CHANNEL_NAME"]},{"name":"const val NEW_PLAYER_MEDIA_NOTIFICATION_ID: Int = 17480","description":"net.newpipe.newplayer.service.NEW_PLAYER_MEDIA_NOTIFICATION_ID","location":"new-player/net.newpipe.newplayer.service/-n-e-w_-p-l-a-y-e-r_-m-e-d-i-a_-n-o-t-i-f-i-c-a-t-i-o-n_-i-d.html","searchKeys":["NEW_PLAYER_MEDIA_NOTIFICATION_ID","const val NEW_PLAYER_MEDIA_NOTIFICATION_ID: Int = 17480","net.newpipe.newplayer.service.NEW_PLAYER_MEDIA_NOTIFICATION_ID"]},{"name":"const val NEW_PLAYER_REQUEST_CODE_OPEN_ACTIVITY: Int = 0","description":"net.newpipe.newplayer.service.NEW_PLAYER_REQUEST_CODE_OPEN_ACTIVITY","location":"new-player/net.newpipe.newplayer.service/-n-e-w_-p-l-a-y-e-r_-r-e-q-u-e-s-t_-c-o-d-e_-o-p-e-n_-a-c-t-i-v-i-t-y.html","searchKeys":["NEW_PLAYER_REQUEST_CODE_OPEN_ACTIVITY","const val NEW_PLAYER_REQUEST_CODE_OPEN_ACTIVITY: Int = 0","net.newpipe.newplayer.service.NEW_PLAYER_REQUEST_CODE_OPEN_ACTIVITY"]},{"name":"constructor()","description":"net.newpipe.newplayer.logic.NoResponse.NoResponse","location":"new-player/net.newpipe.newplayer.logic/-no-response/-no-response.html","searchKeys":["NoResponse","constructor()","net.newpipe.newplayer.logic.NoResponse.NoResponse"]},{"name":"constructor()","description":"net.newpipe.newplayer.repository.PlaceHolderRepository.PlaceHolderRepository","location":"new-player/net.newpipe.newplayer.repository/-place-holder-repository/-place-holder-repository.html","searchKeys":["PlaceHolderRepository","constructor()","net.newpipe.newplayer.repository.PlaceHolderRepository.PlaceHolderRepository"]},{"name":"constructor()","description":"net.newpipe.newplayer.uiModel.NewPlayerViewModelDummy.NewPlayerViewModelDummy","location":"new-player/net.newpipe.newplayer.uiModel/-new-player-view-model-dummy/-new-player-view-model-dummy.html","searchKeys":["NewPlayerViewModelDummy","constructor()","net.newpipe.newplayer.uiModel.NewPlayerViewModelDummy.NewPlayerViewModelDummy"]},{"name":"constructor(action: () -> Unit)","description":"net.newpipe.newplayer.logic.ActionResponse.ActionResponse","location":"new-player/net.newpipe.newplayer.logic/-action-response/-action-response.html","searchKeys":["ActionResponse","constructor(action: () -> Unit)","net.newpipe.newplayer.logic.ActionResponse.ActionResponse"]},{"name":"constructor(actualRepo: MediaRepository, delayInMS: Long)","description":"net.newpipe.newplayer.repository.DelayTestRepository.DelayTestRepository","location":"new-player/net.newpipe.newplayer.repository/-delay-test-repository/-delay-test-repository.html","searchKeys":["DelayTestRepository","constructor(actualRepo: MediaRepository, delayInMS: Long)","net.newpipe.newplayer.repository.DelayTestRepository.DelayTestRepository"]},{"name":"constructor(actualRepositories: List<MultiRepoEntry>)","description":"net.newpipe.newplayer.repository.MultiRepository.MultiRepository","location":"new-player/net.newpipe.newplayer.repository/-multi-repository/-multi-repository.html","searchKeys":["MultiRepository","constructor(actualRepositories: List<MultiRepoEntry>)","net.newpipe.newplayer.repository.MultiRepository.MultiRepository"]},{"name":"constructor(actualRepository: MediaRepository, requestDispatcher: CoroutineDispatcher = Dispatchers.Main)","description":"net.newpipe.newplayer.repository.CachingRepository.CachingRepository","location":"new-player/net.newpipe.newplayer.repository/-caching-repository/-caching-repository.html","searchKeys":["CachingRepository","constructor(actualRepository: MediaRepository, requestDispatcher: CoroutineDispatcher = Dispatchers.Main)","net.newpipe.newplayer.repository.CachingRepository.CachingRepository"]},{"name":"constructor(app: Application, playerActivityClass: Class<out Activity>, repository: MediaRepository, notificationIcon: IconCompat = IconCompat.createWithResource(\n        app,\n        R.drawable.new_player_tiny_icon\n    ), rescueStreamFault: suspend (item: String?, mediaItem: MediaItem?, Exception, repository: MediaRepository) -> StreamExceptionResponse = { _, _, _, _ -> NoResponse() })","description":"net.newpipe.newplayer.NewPlayerImpl.NewPlayerImpl","location":"new-player/net.newpipe.newplayer/-new-player-impl/-new-player-impl.html","searchKeys":["NewPlayerImpl","constructor(app: Application, playerActivityClass: Class<out Activity>, repository: MediaRepository, notificationIcon: IconCompat = IconCompat.createWithResource(\n        app,\n        R.drawable.new_player_tiny_icon\n    ), rescueStreamFault: suspend (item: String?, mediaItem: MediaItem?, Exception, repository: MediaRepository) -> StreamExceptionResponse = { _, _, _, _ -> NoResponse() })","net.newpipe.newplayer.NewPlayerImpl.NewPlayerImpl"]},{"name":"constructor(application: Application)","description":"net.newpipe.newplayer.uiModel.NewPlayerViewModelImpl.NewPlayerViewModelImpl","location":"new-player/net.newpipe.newplayer.uiModel/-new-player-view-model-impl/-new-player-view-model-impl.html","searchKeys":["NewPlayerViewModelImpl","constructor(application: Application)","net.newpipe.newplayer.uiModel.NewPlayerViewModelImpl.NewPlayerViewModelImpl"]},{"name":"constructor(bitrate: Int, fileFormat: String, language: String? = null)","description":"net.newpipe.newplayer.data.AudioStreamTrack.AudioStreamTrack","location":"new-player/net.newpipe.newplayer.data/-audio-stream-track/-audio-stream-track.html","searchKeys":["AudioStreamTrack","constructor(bitrate: Int, fileFormat: String, language: String? = null)","net.newpipe.newplayer.data.AudioStreamTrack.AudioStreamTrack"]},{"name":"constructor(cachingRepository: MediaRepository, disableEagerCaching: Boolean = false, requestDispatcher: CoroutineDispatcher = Dispatchers.Main)","description":"net.newpipe.newplayer.repository.EagerRequestingRepository.EagerRequestingRepository","location":"new-player/net.newpipe.newplayer.repository/-eager-requesting-repository/-eager-requesting-repository.html","searchKeys":["EagerRequestingRepository","constructor(cachingRepository: MediaRepository, disableEagerCaching: Boolean = false, requestDispatcher: CoroutineDispatcher = Dispatchers.Main)","net.newpipe.newplayer.repository.EagerRequestingRepository.EagerRequestingRepository"]},{"name":"constructor(canHandleTimestampedLinks: Boolean, pullsDataFromNetwork: Boolean)","description":"net.newpipe.newplayer.repository.MediaRepository.RepoMetaInfo.RepoMetaInfo","location":"new-player/net.newpipe.newplayer.repository/-media-repository/-repo-meta-info/-repo-meta-info.html","searchKeys":["RepoMetaInfo","constructor(canHandleTimestampedLinks: Boolean, pullsDataFromNetwork: Boolean)","net.newpipe.newplayer.repository.MediaRepository.RepoMetaInfo.RepoMetaInfo"]},{"name":"constructor(chapterStartInMs: Long, chapterTitle: String?, thumbnail: Uri?)","description":"net.newpipe.newplayer.data.Chapter.Chapter","location":"new-player/net.newpipe.newplayer.data/-chapter/-chapter.html","searchKeys":["Chapter","constructor(chapterStartInMs: Long, chapterTitle: String?, thumbnail: Uri?)","net.newpipe.newplayer.data.Chapter.Chapter"]},{"name":"constructor(context: Context, attrs: AttributeSet? = null, defStyleAttr: Int = 0)","description":"net.newpipe.newplayer.ui.NewPlayerView.NewPlayerView","location":"new-player/net.newpipe.newplayer.ui/-new-player-view/-new-player-view.html","searchKeys":["NewPlayerView","constructor(context: Context, attrs: AttributeSet? = null, defStyleAttr: Int = 0)","net.newpipe.newplayer.ui.NewPlayerView.NewPlayerView"]},{"name":"constructor(count: Long, distanceInMS: Long)","description":"net.newpipe.newplayer.repository.MediaRepository.PreviewThumbnailsInfo.PreviewThumbnailsInfo","location":"new-player/net.newpipe.newplayer.repository/-media-repository/-preview-thumbnails-info/-preview-thumbnails-info.html","searchKeys":["PreviewThumbnailsInfo","constructor(count: Long, distanceInMS: Long)","net.newpipe.newplayer.repository.MediaRepository.PreviewThumbnailsInfo.PreviewThumbnailsInfo"]},{"name":"constructor(item: String, streamUri: Uri, streamTracks: List<StreamTrack>, mimeType: String? = null, isDashOrHls: Boolean = false)","description":"net.newpipe.newplayer.data.Stream.Stream","location":"new-player/net.newpipe.newplayer.data/-stream/-stream.html","searchKeys":["Stream","constructor(item: String, streamUri: Uri, streamTracks: List<StreamTrack>, mimeType: String? = null, isDashOrHls: Boolean = false)","net.newpipe.newplayer.data.Stream.Stream"]},{"name":"constructor(key: String, repository: MediaRepository)","description":"net.newpipe.newplayer.repository.MultiRepoEntry.MultiRepoEntry","location":"new-player/net.newpipe.newplayer.repository/-multi-repo-entry/-multi-repo-entry.html","searchKeys":["MultiRepoEntry","constructor(key: String, repository: MediaRepository)","net.newpipe.newplayer.repository.MultiRepoEntry.MultiRepoEntry"]},{"name":"constructor(message: String)","description":"net.newpipe.newplayer.data.NewPlayerException.NewPlayerException","location":"new-player/net.newpipe.newplayer.data/-new-player-exception/-new-player-exception.html","searchKeys":["NewPlayerException","constructor(message: String)","net.newpipe.newplayer.data.NewPlayerException.NewPlayerException"]},{"name":"constructor(message: String, cause: Throwable)","description":"net.newpipe.newplayer.data.NewPlayerException.NewPlayerException","location":"new-player/net.newpipe.newplayer.data/-new-player-exception/-new-player-exception.html","searchKeys":["NewPlayerException","constructor(message: String, cause: Throwable)","net.newpipe.newplayer.data.NewPlayerException.NewPlayerException"]},{"name":"constructor(newItem: String)","description":"net.newpipe.newplayer.logic.ReplaceItemResponse.ReplaceItemResponse","location":"new-player/net.newpipe.newplayer.logic/-replace-item-response/-replace-item-response.html","searchKeys":["ReplaceItemResponse","constructor(newItem: String)","net.newpipe.newplayer.logic.ReplaceItemResponse.ReplaceItemResponse"]},{"name":"constructor(stream: Stream)","description":"net.newpipe.newplayer.data.SingleSelection.SingleSelection","location":"new-player/net.newpipe.newplayer.data/-single-selection/-single-selection.html","searchKeys":["SingleSelection","constructor(stream: Stream)","net.newpipe.newplayer.data.SingleSelection.SingleSelection"]},{"name":"constructor(streamSelection: StreamSelection)","description":"net.newpipe.newplayer.logic.ReplaceStreamSelectionResponse.ReplaceStreamSelectionResponse","location":"new-player/net.newpipe.newplayer.logic/-replace-stream-selection-response/-replace-stream-selection-response.html","searchKeys":["ReplaceStreamSelectionResponse","constructor(streamSelection: StreamSelection)","net.newpipe.newplayer.logic.ReplaceStreamSelectionResponse.ReplaceStreamSelectionResponse"]},{"name":"constructor(streams: List<Stream>)","description":"net.newpipe.newplayer.data.MultiSelection.MultiSelection","location":"new-player/net.newpipe.newplayer.data/-multi-selection/-multi-selection.html","searchKeys":["MultiSelection","constructor(streams: List<Stream>)","net.newpipe.newplayer.data.MultiSelection.MultiSelection"]},{"name":"constructor(systemBarInLightMode: Boolean, brightness: Float, screenOrientation: Int)","description":"net.newpipe.newplayer.uiModel.EmbeddedUiConfig.EmbeddedUiConfig","location":"new-player/net.newpipe.newplayer.uiModel/-embedded-ui-config/-embedded-ui-config.html","searchKeys":["EmbeddedUiConfig","constructor(systemBarInLightMode: Boolean, brightness: Float, screenOrientation: Int)","net.newpipe.newplayer.uiModel.EmbeddedUiConfig.EmbeddedUiConfig"]},{"name":"constructor(uiMode: UIModeState, playing: Boolean, contentRatio: Float, embeddedUiRatio: Float, contentFitMode: ContentScale, seekerPosition: Float, bufferedPercentage: Float, isLoading: Boolean, durationInMs: Long, playbackPositionInMs: Long, playbackPositionInPlaylistMs: Long, fastSeekSeconds: Int, soundVolume: Float, brightness: Float?, embeddedUiConfig: EmbeddedUiConfig?, playList: List<MediaItem>, chapters: List<Chapter>, shuffleEnabled: Boolean, repeatMode: RepeatMode, playListDurationInS: Int, currentlyPlaying: MediaItem?, currentPlaylistItemIndex: Int, currentlyAvailableTracks: List<StreamTrack>, currentlyPlayingTracks: List<StreamTrack>, enteringPip: Boolean, currentSeekPreviewThumbnail: ImageBitmap?, seekPreviewVisible: Boolean)","description":"net.newpipe.newplayer.uiModel.NewPlayerUIState.NewPlayerUIState","location":"new-player/net.newpipe.newplayer.uiModel/-new-player-u-i-state/-new-player-u-i-state.html","searchKeys":["NewPlayerUIState","constructor(uiMode: UIModeState, playing: Boolean, contentRatio: Float, embeddedUiRatio: Float, contentFitMode: ContentScale, seekerPosition: Float, bufferedPercentage: Float, isLoading: Boolean, durationInMs: Long, playbackPositionInMs: Long, playbackPositionInPlaylistMs: Long, fastSeekSeconds: Int, soundVolume: Float, brightness: Float?, embeddedUiConfig: EmbeddedUiConfig?, playList: List<MediaItem>, chapters: List<Chapter>, shuffleEnabled: Boolean, repeatMode: RepeatMode, playListDurationInS: Int, currentlyPlaying: MediaItem?, currentPlaylistItemIndex: Int, currentlyAvailableTracks: List<StreamTrack>, currentlyPlayingTracks: List<StreamTrack>, enteringPip: Boolean, currentSeekPreviewThumbnail: ImageBitmap?, seekPreviewVisible: Boolean)","net.newpipe.newplayer.uiModel.NewPlayerUIState.NewPlayerUIState"]},{"name":"constructor(uri: Uri, identifier: String)","description":"net.newpipe.newplayer.data.Subtitle.Subtitle","location":"new-player/net.newpipe.newplayer.data/-subtitle/-subtitle.html","searchKeys":["Subtitle","constructor(uri: Uri, identifier: String)","net.newpipe.newplayer.data.Subtitle.Subtitle"]},{"name":"constructor(viewModel: NewPlayerViewModel)","description":"net.newpipe.newplayer.ActivityBrainSlug.ActivityBrainSlug","location":"new-player/net.newpipe.newplayer/-activity-brain-slug/-activity-brain-slug.html","searchKeys":["ActivityBrainSlug","constructor(viewModel: NewPlayerViewModel)","net.newpipe.newplayer.ActivityBrainSlug.ActivityBrainSlug"]},{"name":"constructor(width: Int, height: Int, frameRate: Int, fileFormat: String)","description":"net.newpipe.newplayer.data.VideoStreamTrack.VideoStreamTrack","location":"new-player/net.newpipe.newplayer.data/-video-stream-track/-video-stream-track.html","searchKeys":["VideoStreamTrack","constructor(width: Int, height: Int, frameRate: Int, fileFormat: String)","net.newpipe.newplayer.data.VideoStreamTrack.VideoStreamTrack"]},{"name":"data class ActionResponse(val action: () -> Unit) : StreamExceptionResponse","description":"net.newpipe.newplayer.logic.ActionResponse","location":"new-player/net.newpipe.newplayer.logic/-action-response/index.html","searchKeys":["ActionResponse","data class ActionResponse(val action: () -> Unit) : StreamExceptionResponse","net.newpipe.newplayer.logic.ActionResponse"]},{"name":"data class AudioStreamTrack(val bitrate: Int, val fileFormat: String, val language: String? = null) : StreamTrack","description":"net.newpipe.newplayer.data.AudioStreamTrack","location":"new-player/net.newpipe.newplayer.data/-audio-stream-track/index.html","searchKeys":["AudioStreamTrack","data class AudioStreamTrack(val bitrate: Int, val fileFormat: String, val language: String? = null) : StreamTrack","net.newpipe.newplayer.data.AudioStreamTrack"]},{"name":"data class Chapter(val chapterStartInMs: Long, val chapterTitle: String?, val thumbnail: Uri?)","description":"net.newpipe.newplayer.data.Chapter","location":"new-player/net.newpipe.newplayer.data/-chapter/index.html","searchKeys":["Chapter","data class Chapter(val chapterStartInMs: Long, val chapterTitle: String?, val thumbnail: Uri?)","net.newpipe.newplayer.data.Chapter"]},{"name":"data class EmbeddedUiConfig(val systemBarInLightMode: Boolean, val brightness: Float, val screenOrientation: Int) : Parcelable","description":"net.newpipe.newplayer.uiModel.EmbeddedUiConfig","location":"new-player/net.newpipe.newplayer.uiModel/-embedded-ui-config/index.html","searchKeys":["EmbeddedUiConfig","data class EmbeddedUiConfig(val systemBarInLightMode: Boolean, val brightness: Float, val screenOrientation: Int) : Parcelable","net.newpipe.newplayer.uiModel.EmbeddedUiConfig"]},{"name":"data class MultiRepoEntry(val key: String, val repository: MediaRepository)","description":"net.newpipe.newplayer.repository.MultiRepoEntry","location":"new-player/net.newpipe.newplayer.repository/-multi-repo-entry/index.html","searchKeys":["MultiRepoEntry","data class MultiRepoEntry(val key: String, val repository: MediaRepository)","net.newpipe.newplayer.repository.MultiRepoEntry"]},{"name":"data class MultiSelection(val streams: List<Stream>) : StreamSelection","description":"net.newpipe.newplayer.data.MultiSelection","location":"new-player/net.newpipe.newplayer.data/-multi-selection/index.html","searchKeys":["MultiSelection","data class MultiSelection(val streams: List<Stream>) : StreamSelection","net.newpipe.newplayer.data.MultiSelection"]},{"name":"data class NewPlayerUIState(val uiMode: UIModeState, val playing: Boolean, val contentRatio: Float, val embeddedUiRatio: Float, val contentFitMode: ContentScale, val seekerPosition: Float, val bufferedPercentage: Float, val isLoading: Boolean, val durationInMs: Long, val playbackPositionInMs: Long, val playbackPositionInPlaylistMs: Long, val fastSeekSeconds: Int, val soundVolume: Float, val brightness: Float?, val embeddedUiConfig: EmbeddedUiConfig?, val playList: List<MediaItem>, val chapters: List<Chapter>, val shuffleEnabled: Boolean, val repeatMode: RepeatMode, val playListDurationInS: Int, val currentlyPlaying: MediaItem?, val currentPlaylistItemIndex: Int, val currentlyAvailableTracks: List<StreamTrack>, val currentlyPlayingTracks: List<StreamTrack>, val enteringPip: Boolean, val currentSeekPreviewThumbnail: ImageBitmap?, val seekPreviewVisible: Boolean)","description":"net.newpipe.newplayer.uiModel.NewPlayerUIState","location":"new-player/net.newpipe.newplayer.uiModel/-new-player-u-i-state/index.html","searchKeys":["NewPlayerUIState","data class NewPlayerUIState(val uiMode: UIModeState, val playing: Boolean, val contentRatio: Float, val embeddedUiRatio: Float, val contentFitMode: ContentScale, val seekerPosition: Float, val bufferedPercentage: Float, val isLoading: Boolean, val durationInMs: Long, val playbackPositionInMs: Long, val playbackPositionInPlaylistMs: Long, val fastSeekSeconds: Int, val soundVolume: Float, val brightness: Float?, val embeddedUiConfig: EmbeddedUiConfig?, val playList: List<MediaItem>, val chapters: List<Chapter>, val shuffleEnabled: Boolean, val repeatMode: RepeatMode, val playListDurationInS: Int, val currentlyPlaying: MediaItem?, val currentPlaylistItemIndex: Int, val currentlyAvailableTracks: List<StreamTrack>, val currentlyPlayingTracks: List<StreamTrack>, val enteringPip: Boolean, val currentSeekPreviewThumbnail: ImageBitmap?, val seekPreviewVisible: Boolean)","net.newpipe.newplayer.uiModel.NewPlayerUIState"]},{"name":"data class PreviewThumbnailsInfo(val count: Long, val distanceInMS: Long)","description":"net.newpipe.newplayer.repository.MediaRepository.PreviewThumbnailsInfo","location":"new-player/net.newpipe.newplayer.repository/-media-repository/-preview-thumbnails-info/index.html","searchKeys":["PreviewThumbnailsInfo","data class PreviewThumbnailsInfo(val count: Long, val distanceInMS: Long)","net.newpipe.newplayer.repository.MediaRepository.PreviewThumbnailsInfo"]},{"name":"data class ReplaceItemResponse(val newItem: String) : StreamExceptionResponse","description":"net.newpipe.newplayer.logic.ReplaceItemResponse","location":"new-player/net.newpipe.newplayer.logic/-replace-item-response/index.html","searchKeys":["ReplaceItemResponse","data class ReplaceItemResponse(val newItem: String) : StreamExceptionResponse","net.newpipe.newplayer.logic.ReplaceItemResponse"]},{"name":"data class ReplaceStreamSelectionResponse(val streamSelection: StreamSelection) : StreamExceptionResponse","description":"net.newpipe.newplayer.logic.ReplaceStreamSelectionResponse","location":"new-player/net.newpipe.newplayer.logic/-replace-stream-selection-response/index.html","searchKeys":["ReplaceStreamSelectionResponse","data class ReplaceStreamSelectionResponse(val streamSelection: StreamSelection) : StreamExceptionResponse","net.newpipe.newplayer.logic.ReplaceStreamSelectionResponse"]},{"name":"data class RepoMetaInfo(val canHandleTimestampedLinks: Boolean, val pullsDataFromNetwork: Boolean)","description":"net.newpipe.newplayer.repository.MediaRepository.RepoMetaInfo","location":"new-player/net.newpipe.newplayer.repository/-media-repository/-repo-meta-info/index.html","searchKeys":["RepoMetaInfo","data class RepoMetaInfo(val canHandleTimestampedLinks: Boolean, val pullsDataFromNetwork: Boolean)","net.newpipe.newplayer.repository.MediaRepository.RepoMetaInfo"]},{"name":"data class SingleSelection(val stream: Stream) : StreamSelection","description":"net.newpipe.newplayer.data.SingleSelection","location":"new-player/net.newpipe.newplayer.data/-single-selection/index.html","searchKeys":["SingleSelection","data class SingleSelection(val stream: Stream) : StreamSelection","net.newpipe.newplayer.data.SingleSelection"]},{"name":"data class Stream(val item: String, val streamUri: Uri, val streamTracks: List<StreamTrack>, val mimeType: String? = null, val isDashOrHls: Boolean = false)","description":"net.newpipe.newplayer.data.Stream","location":"new-player/net.newpipe.newplayer.data/-stream/index.html","searchKeys":["Stream","data class Stream(val item: String, val streamUri: Uri, val streamTracks: List<StreamTrack>, val mimeType: String? = null, val isDashOrHls: Boolean = false)","net.newpipe.newplayer.data.Stream"]},{"name":"data class Subtitle(val uri: Uri, val identifier: String)","description":"net.newpipe.newplayer.data.Subtitle","location":"new-player/net.newpipe.newplayer.data/-subtitle/index.html","searchKeys":["Subtitle","data class Subtitle(val uri: Uri, val identifier: String)","net.newpipe.newplayer.data.Subtitle"]},{"name":"data class VideoStreamTrack(val width: Int, val height: Int, val frameRate: Int, val fileFormat: String) : StreamTrack","description":"net.newpipe.newplayer.data.VideoStreamTrack","location":"new-player/net.newpipe.newplayer.data/-video-stream-track/index.html","searchKeys":["VideoStreamTrack","data class VideoStreamTrack(val width: Int, val height: Int, val frameRate: Int, val fileFormat: String) : StreamTrack","net.newpipe.newplayer.data.VideoStreamTrack"]},{"name":"enum ContentScale : Enum<ContentScale> ","description":"net.newpipe.newplayer.ui.ContentScale","location":"new-player/net.newpipe.newplayer.ui/-content-scale/index.html","searchKeys":["ContentScale","enum ContentScale : Enum<ContentScale> ","net.newpipe.newplayer.ui.ContentScale"]},{"name":"enum PlayMode : Enum<PlayMode> ","description":"net.newpipe.newplayer.data.PlayMode","location":"new-player/net.newpipe.newplayer.data/-play-mode/index.html","searchKeys":["PlayMode","enum PlayMode : Enum<PlayMode> ","net.newpipe.newplayer.data.PlayMode"]},{"name":"enum RepeatMode : Enum<RepeatMode> ","description":"net.newpipe.newplayer.data.RepeatMode","location":"new-player/net.newpipe.newplayer.data/-repeat-mode/index.html","searchKeys":["RepeatMode","enum RepeatMode : Enum<RepeatMode> ","net.newpipe.newplayer.data.RepeatMode"]},{"name":"enum UIModeState : Enum<UIModeState> ","description":"net.newpipe.newplayer.uiModel.UIModeState","location":"new-player/net.newpipe.newplayer.uiModel/-u-i-mode-state/index.html","searchKeys":["UIModeState","enum UIModeState : Enum<UIModeState> ","net.newpipe.newplayer.uiModel.UIModeState"]},{"name":"fun AudioPlayerUIColorPreview()","description":"net.newpipe.newplayer.ui.theme.AudioPlayerUIColorPreview","location":"new-player/net.newpipe.newplayer.ui.theme/-audio-player-u-i-color-preview.html","searchKeys":["AudioPlayerUIColorPreview","fun AudioPlayerUIColorPreview()","net.newpipe.newplayer.ui.theme.AudioPlayerUIColorPreview"]},{"name":"fun NewPlayerUI(viewModel: NewPlayerViewModel?)","description":"net.newpipe.newplayer.ui.NewPlayerUI","location":"new-player/net.newpipe.newplayer.ui/-new-player-u-i.html","searchKeys":["NewPlayerUI","fun NewPlayerUI(viewModel: NewPlayerViewModel?)","net.newpipe.newplayer.ui.NewPlayerUI"]},{"name":"fun SeekerPreview()","description":"net.newpipe.newplayer.ui.seeker.SeekerPreview","location":"new-player/net.newpipe.newplayer.ui.seeker/-seeker-preview.html","searchKeys":["SeekerPreview","fun SeekerPreview()","net.newpipe.newplayer.ui.seeker.SeekerPreview"]},{"name":"fun VideoPlayerControllerUIPreviewEmbeddedColorPreview()","description":"net.newpipe.newplayer.ui.theme.VideoPlayerControllerUIPreviewEmbeddedColorPreview","location":"new-player/net.newpipe.newplayer.ui.theme/-video-player-controller-u-i-preview-embedded-color-preview.html","searchKeys":["VideoPlayerControllerUIPreviewEmbeddedColorPreview","fun VideoPlayerControllerUIPreviewEmbeddedColorPreview()","net.newpipe.newplayer.ui.theme.VideoPlayerControllerUIPreviewEmbeddedColorPreview"]},{"name":"fun VideoPlayerTheme(content: () -> Unit)","description":"net.newpipe.newplayer.ui.theme.VideoPlayerTheme","location":"new-player/net.newpipe.newplayer.ui.theme/-video-player-theme.html","searchKeys":["VideoPlayerTheme","fun VideoPlayerTheme(content: () -> Unit)","net.newpipe.newplayer.ui.theme.VideoPlayerTheme"]},{"name":"fun addViewToHideOnFullscreen(view: View)","description":"net.newpipe.newplayer.ActivityBrainSlug.addViewToHideOnFullscreen","location":"new-player/net.newpipe.newplayer/-activity-brain-slug/add-view-to-hide-on-fullscreen.html","searchKeys":["addViewToHideOnFullscreen","fun addViewToHideOnFullscreen(view: View)","net.newpipe.newplayer.ActivityBrainSlug.addViewToHideOnFullscreen"]},{"name":"fun flush()","description":"net.newpipe.newplayer.repository.CachingRepository.flush","location":"new-player/net.newpipe.newplayer.repository/-caching-repository/flush.html","searchKeys":["flush","fun flush()","net.newpipe.newplayer.repository.CachingRepository.flush"]},{"name":"fun fromPlayMode(playMode: PlayMode): UIModeState","description":"net.newpipe.newplayer.uiModel.UIModeState.Companion.fromPlayMode","location":"new-player/net.newpipe.newplayer.uiModel/-u-i-mode-state/-companion/from-play-mode.html","searchKeys":["fromPlayMode","fun fromPlayMode(playMode: PlayMode): UIModeState","net.newpipe.newplayer.uiModel.UIModeState.Companion.fromPlayMode"]},{"name":"fun getAudioEquivalent(): UIModeState","description":"net.newpipe.newplayer.uiModel.UIModeState.getAudioEquivalent","location":"new-player/net.newpipe.newplayer.uiModel/-u-i-mode-state/get-audio-equivalent.html","searchKeys":["getAudioEquivalent","fun getAudioEquivalent(): UIModeState","net.newpipe.newplayer.uiModel.UIModeState.getAudioEquivalent"]},{"name":"fun getChapterSelectUiState(): UIModeState","description":"net.newpipe.newplayer.uiModel.UIModeState.getChapterSelectUiState","location":"new-player/net.newpipe.newplayer.uiModel/-u-i-mode-state/get-chapter-select-ui-state.html","searchKeys":["getChapterSelectUiState","fun getChapterSelectUiState(): UIModeState","net.newpipe.newplayer.uiModel.UIModeState.getChapterSelectUiState"]},{"name":"fun getControllerUiVisibleState(): UIModeState","description":"net.newpipe.newplayer.uiModel.UIModeState.getControllerUiVisibleState","location":"new-player/net.newpipe.newplayer.uiModel/-u-i-mode-state/get-controller-ui-visible-state.html","searchKeys":["getControllerUiVisibleState","fun getControllerUiVisibleState(): UIModeState","net.newpipe.newplayer.uiModel.UIModeState.getControllerUiVisibleState"]},{"name":"fun getNextModeWhenBackPressed(): UIModeState?","description":"net.newpipe.newplayer.uiModel.UIModeState.getNextModeWhenBackPressed","location":"new-player/net.newpipe.newplayer.uiModel/-u-i-mode-state/get-next-mode-when-back-pressed.html","searchKeys":["getNextModeWhenBackPressed","fun getNextModeWhenBackPressed(): UIModeState?","net.newpipe.newplayer.uiModel.UIModeState.getNextModeWhenBackPressed"]},{"name":"fun getStreamSelectUiState(): UIModeState","description":"net.newpipe.newplayer.uiModel.UIModeState.getStreamSelectUiState","location":"new-player/net.newpipe.newplayer.uiModel/-u-i-mode-state/get-stream-select-ui-state.html","searchKeys":["getStreamSelectUiState","fun getStreamSelectUiState(): UIModeState","net.newpipe.newplayer.uiModel.UIModeState.getStreamSelectUiState"]},{"name":"fun getUiHiddenState(): UIModeState","description":"net.newpipe.newplayer.uiModel.UIModeState.getUiHiddenState","location":"new-player/net.newpipe.newplayer.uiModel/-u-i-mode-state/get-ui-hidden-state.html","searchKeys":["getUiHiddenState","fun getUiHiddenState(): UIModeState","net.newpipe.newplayer.uiModel.UIModeState.getUiHiddenState"]},{"name":"fun getVideoEquivalent(): UIModeState","description":"net.newpipe.newplayer.uiModel.UIModeState.getVideoEquivalent","location":"new-player/net.newpipe.newplayer.uiModel/-u-i-mode-state/get-video-equivalent.html","searchKeys":["getVideoEquivalent","fun getVideoEquivalent(): UIModeState","net.newpipe.newplayer.uiModel.UIModeState.getVideoEquivalent"]},{"name":"fun onPlayBackError(exception: Exception)","description":"net.newpipe.newplayer.NewPlayerImpl.onPlayBackError","location":"new-player/net.newpipe.newplayer/-new-player-impl/on-play-back-error.html","searchKeys":["onPlayBackError","fun onPlayBackError(exception: Exception)","net.newpipe.newplayer.NewPlayerImpl.onPlayBackError"]},{"name":"fun reset()","description":"net.newpipe.newplayer.repository.EagerRequestingRepository.reset","location":"new-player/net.newpipe.newplayer.repository/-eager-requesting-repository/reset.html","searchKeys":["reset","fun reset()","net.newpipe.newplayer.repository.EagerRequestingRepository.reset"]},{"name":"fun toPlayMode(): PlayMode","description":"net.newpipe.newplayer.uiModel.UIModeState.toPlayMode","location":"new-player/net.newpipe.newplayer.uiModel/-u-i-mode-state/to-play-mode.html","searchKeys":["toPlayMode","fun toPlayMode(): PlayMode","net.newpipe.newplayer.uiModel.UIModeState.toPlayMode"]},{"name":"fun valueOf(value: String): ContentScale","description":"net.newpipe.newplayer.ui.ContentScale.valueOf","location":"new-player/net.newpipe.newplayer.ui/-content-scale/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): ContentScale","net.newpipe.newplayer.ui.ContentScale.valueOf"]},{"name":"fun valueOf(value: String): PlayMode","description":"net.newpipe.newplayer.data.PlayMode.valueOf","location":"new-player/net.newpipe.newplayer.data/-play-mode/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): PlayMode","net.newpipe.newplayer.data.PlayMode.valueOf"]},{"name":"fun valueOf(value: String): RepeatMode","description":"net.newpipe.newplayer.data.RepeatMode.valueOf","location":"new-player/net.newpipe.newplayer.data/-repeat-mode/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): RepeatMode","net.newpipe.newplayer.data.RepeatMode.valueOf"]},{"name":"fun valueOf(value: String): UIModeState","description":"net.newpipe.newplayer.uiModel.UIModeState.valueOf","location":"new-player/net.newpipe.newplayer.uiModel/-u-i-mode-state/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): UIModeState","net.newpipe.newplayer.uiModel.UIModeState.valueOf"]},{"name":"fun values(): Array<ContentScale>","description":"net.newpipe.newplayer.ui.ContentScale.values","location":"new-player/net.newpipe.newplayer.ui/-content-scale/values.html","searchKeys":["values","fun values(): Array<ContentScale>","net.newpipe.newplayer.ui.ContentScale.values"]},{"name":"fun values(): Array<PlayMode>","description":"net.newpipe.newplayer.data.PlayMode.values","location":"new-player/net.newpipe.newplayer.data/-play-mode/values.html","searchKeys":["values","fun values(): Array<PlayMode>","net.newpipe.newplayer.data.PlayMode.values"]},{"name":"fun values(): Array<RepeatMode>","description":"net.newpipe.newplayer.data.RepeatMode.values","location":"new-player/net.newpipe.newplayer.data/-repeat-mode/values.html","searchKeys":["values","fun values(): Array<RepeatMode>","net.newpipe.newplayer.data.RepeatMode.values"]},{"name":"fun values(): Array<UIModeState>","description":"net.newpipe.newplayer.uiModel.UIModeState.values","location":"new-player/net.newpipe.newplayer.uiModel/-u-i-mode-state/values.html","searchKeys":["values","fun values(): Array<UIModeState>","net.newpipe.newplayer.uiModel.UIModeState.values"]},{"name":"interface MediaRepository","description":"net.newpipe.newplayer.repository.MediaRepository","location":"new-player/net.newpipe.newplayer.repository/-media-repository/index.html","searchKeys":["MediaRepository","interface MediaRepository","net.newpipe.newplayer.repository.MediaRepository"]},{"name":"interface NewPlayer","description":"net.newpipe.newplayer.NewPlayer","location":"new-player/net.newpipe.newplayer/-new-player/index.html","searchKeys":["NewPlayer","interface NewPlayer","net.newpipe.newplayer.NewPlayer"]},{"name":"interface NewPlayerViewModel","description":"net.newpipe.newplayer.uiModel.NewPlayerViewModel","location":"new-player/net.newpipe.newplayer.uiModel/-new-player-view-model/index.html","searchKeys":["NewPlayerViewModel","interface NewPlayerViewModel","net.newpipe.newplayer.uiModel.NewPlayerViewModel"]},{"name":"interface StreamExceptionResponse","description":"net.newpipe.newplayer.logic.StreamExceptionResponse","location":"new-player/net.newpipe.newplayer.logic/-stream-exception-response/index.html","searchKeys":["StreamExceptionResponse","interface StreamExceptionResponse","net.newpipe.newplayer.logic.StreamExceptionResponse"]},{"name":"interface StreamSelection","description":"net.newpipe.newplayer.data.StreamSelection","location":"new-player/net.newpipe.newplayer.data/-stream-selection/index.html","searchKeys":["StreamSelection","interface StreamSelection","net.newpipe.newplayer.data.StreamSelection"]},{"name":"interface StreamTrack : Comparable<StreamTrack> ","description":"net.newpipe.newplayer.data.StreamTrack","location":"new-player/net.newpipe.newplayer.data/-stream-track/index.html","searchKeys":["StreamTrack","interface StreamTrack : Comparable<StreamTrack> ","net.newpipe.newplayer.data.StreamTrack"]},{"name":"object Companion","description":"net.newpipe.newplayer.uiModel.EmbeddedUiConfig.Companion","location":"new-player/net.newpipe.newplayer.uiModel/-embedded-ui-config/-companion/index.html","searchKeys":["Companion","object Companion","net.newpipe.newplayer.uiModel.EmbeddedUiConfig.Companion"]},{"name":"object Companion","description":"net.newpipe.newplayer.uiModel.NewPlayerUIState.Companion","location":"new-player/net.newpipe.newplayer.uiModel/-new-player-u-i-state/-companion/index.html","searchKeys":["Companion","object Companion","net.newpipe.newplayer.uiModel.NewPlayerUIState.Companion"]},{"name":"object Companion","description":"net.newpipe.newplayer.uiModel.UIModeState.Companion","location":"new-player/net.newpipe.newplayer.uiModel/-u-i-mode-state/-companion/index.html","searchKeys":["Companion","object Companion","net.newpipe.newplayer.uiModel.UIModeState.Companion"]},{"name":"object TrackUtils","description":"net.newpipe.newplayer.logic.TrackUtils","location":"new-player/net.newpipe.newplayer.logic/-track-utils/index.html","searchKeys":["TrackUtils","object TrackUtils","net.newpipe.newplayer.logic.TrackUtils"]},{"name":"open class NewPlayerViewModelDummy : InternalNewPlayerViewModel","description":"net.newpipe.newplayer.uiModel.NewPlayerViewModelDummy","location":"new-player/net.newpipe.newplayer.uiModel/-new-player-view-model-dummy/index.html","searchKeys":["NewPlayerViewModelDummy","open class NewPlayerViewModelDummy : InternalNewPlayerViewModel","net.newpipe.newplayer.uiModel.NewPlayerViewModelDummy"]},{"name":"open fun getHttpDataSourceFactory(item: String): HttpDataSource.Factory","description":"net.newpipe.newplayer.repository.MediaRepository.getHttpDataSourceFactory","location":"new-player/net.newpipe.newplayer.repository/-media-repository/get-http-data-source-factory.html","searchKeys":["getHttpDataSourceFactory","open fun getHttpDataSourceFactory(item: String): HttpDataSource.Factory","net.newpipe.newplayer.repository.MediaRepository.getHttpDataSourceFactory"]},{"name":"open operator override fun compareTo(other: StreamTrack): Int","description":"net.newpipe.newplayer.data.AudioStreamTrack.compareTo","location":"new-player/net.newpipe.newplayer.data/-audio-stream-track/compare-to.html","searchKeys":["compareTo","open operator override fun compareTo(other: StreamTrack): Int","net.newpipe.newplayer.data.AudioStreamTrack.compareTo"]},{"name":"open operator override fun compareTo(other: StreamTrack): Int","description":"net.newpipe.newplayer.data.VideoStreamTrack.compareTo","location":"new-player/net.newpipe.newplayer.data/-video-stream-track/compare-to.html","searchKeys":["compareTo","open operator override fun compareTo(other: StreamTrack): Int","net.newpipe.newplayer.data.VideoStreamTrack.compareTo"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"net.newpipe.newplayer.data.AudioStreamTrack.equals","location":"new-player/net.newpipe.newplayer.data/-audio-stream-track/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","net.newpipe.newplayer.data.AudioStreamTrack.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"net.newpipe.newplayer.data.Stream.equals","location":"new-player/net.newpipe.newplayer.data/-stream/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","net.newpipe.newplayer.data.Stream.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"net.newpipe.newplayer.data.VideoStreamTrack.equals","location":"new-player/net.newpipe.newplayer.data/-video-stream-track/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","net.newpipe.newplayer.data.VideoStreamTrack.equals"]},{"name":"open override fun addToPlaylist(item: String)","description":"net.newpipe.newplayer.NewPlayerImpl.addToPlaylist","location":"new-player/net.newpipe.newplayer/-new-player-impl/add-to-playlist.html","searchKeys":["addToPlaylist","open override fun addToPlaylist(item: String)","net.newpipe.newplayer.NewPlayerImpl.addToPlaylist"]},{"name":"open override fun brightnessChange(changeRate: Float, systemBrightness: Float)","description":"net.newpipe.newplayer.uiModel.NewPlayerViewModelDummy.brightnessChange","location":"new-player/net.newpipe.newplayer.uiModel/-new-player-view-model-dummy/brightness-change.html","searchKeys":["brightnessChange","open override fun brightnessChange(changeRate: Float, systemBrightness: Float)","net.newpipe.newplayer.uiModel.NewPlayerViewModelDummy.brightnessChange"]},{"name":"open override fun brightnessChange(changeRate: Float, systemBrightness: Float)","description":"net.newpipe.newplayer.uiModel.NewPlayerViewModelImpl.brightnessChange","location":"new-player/net.newpipe.newplayer.uiModel/-new-player-view-model-impl/brightness-change.html","searchKeys":["brightnessChange","open override fun brightnessChange(changeRate: Float, systemBrightness: Float)","net.newpipe.newplayer.uiModel.NewPlayerViewModelImpl.brightnessChange"]},{"name":"open override fun changeUiMode(newUiModeState: UIModeState, embeddedUiConfig: EmbeddedUiConfig?)","description":"net.newpipe.newplayer.uiModel.NewPlayerViewModelDummy.changeUiMode","location":"new-player/net.newpipe.newplayer.uiModel/-new-player-view-model-dummy/change-ui-mode.html","searchKeys":["changeUiMode","open override fun changeUiMode(newUiModeState: UIModeState, embeddedUiConfig: EmbeddedUiConfig?)","net.newpipe.newplayer.uiModel.NewPlayerViewModelDummy.changeUiMode"]},{"name":"open override fun changeUiMode(newUiModeState: UIModeState, embeddedUiConfig: EmbeddedUiConfig?)","description":"net.newpipe.newplayer.uiModel.NewPlayerViewModelImpl.changeUiMode","location":"new-player/net.newpipe.newplayer.uiModel/-new-player-view-model-impl/change-ui-mode.html","searchKeys":["changeUiMode","open override fun changeUiMode(newUiModeState: UIModeState, embeddedUiConfig: EmbeddedUiConfig?)","net.newpipe.newplayer.uiModel.NewPlayerViewModelImpl.changeUiMode"]},{"name":"open override fun chapterSelected(chapterId: Int)","description":"net.newpipe.newplayer.uiModel.NewPlayerViewModelDummy.chapterSelected","location":"new-player/net.newpipe.newplayer.uiModel/-new-player-view-model-dummy/chapter-selected.html","searchKeys":["chapterSelected","open override fun chapterSelected(chapterId: Int)","net.newpipe.newplayer.uiModel.NewPlayerViewModelDummy.chapterSelected"]},{"name":"open override fun chapterSelected(chapterId: Int)","description":"net.newpipe.newplayer.uiModel.NewPlayerViewModelImpl.chapterSelected","location":"new-player/net.newpipe.newplayer.uiModel/-new-player-view-model-impl/chapter-selected.html","searchKeys":["chapterSelected","open override fun chapterSelected(chapterId: Int)","net.newpipe.newplayer.uiModel.NewPlayerViewModelImpl.chapterSelected"]},{"name":"open override fun cycleRepeatMode()","description":"net.newpipe.newplayer.uiModel.NewPlayerViewModelDummy.cycleRepeatMode","location":"new-player/net.newpipe.newplayer.uiModel/-new-player-view-model-dummy/cycle-repeat-mode.html","searchKeys":["cycleRepeatMode","open override fun cycleRepeatMode()","net.newpipe.newplayer.uiModel.NewPlayerViewModelDummy.cycleRepeatMode"]},{"name":"open override fun cycleRepeatMode()","description":"net.newpipe.newplayer.uiModel.NewPlayerViewModelImpl.cycleRepeatMode","location":"new-player/net.newpipe.newplayer.uiModel/-new-player-view-model-impl/cycle-repeat-mode.html","searchKeys":["cycleRepeatMode","open override fun cycleRepeatMode()","net.newpipe.newplayer.uiModel.NewPlayerViewModelImpl.cycleRepeatMode"]},{"name":"open override fun dialogVisible(visible: Boolean)","description":"net.newpipe.newplayer.uiModel.NewPlayerViewModelDummy.dialogVisible","location":"new-player/net.newpipe.newplayer.uiModel/-new-player-view-model-dummy/dialog-visible.html","searchKeys":["dialogVisible","open override fun dialogVisible(visible: Boolean)","net.newpipe.newplayer.uiModel.NewPlayerViewModelDummy.dialogVisible"]},{"name":"open override fun dialogVisible(visible: Boolean)","description":"net.newpipe.newplayer.uiModel.NewPlayerViewModelImpl.dialogVisible","location":"new-player/net.newpipe.newplayer.uiModel/-new-player-view-model-impl/dialog-visible.html","searchKeys":["dialogVisible","open override fun dialogVisible(visible: Boolean)","net.newpipe.newplayer.uiModel.NewPlayerViewModelImpl.dialogVisible"]},{"name":"open override fun doneEnteringPip()","description":"net.newpipe.newplayer.uiModel.NewPlayerViewModelDummy.doneEnteringPip","location":"new-player/net.newpipe.newplayer.uiModel/-new-player-view-model-dummy/done-entering-pip.html","searchKeys":["doneEnteringPip","open override fun doneEnteringPip()","net.newpipe.newplayer.uiModel.NewPlayerViewModelDummy.doneEnteringPip"]},{"name":"open override fun doneEnteringPip()","description":"net.newpipe.newplayer.uiModel.NewPlayerViewModelImpl.doneEnteringPip","location":"new-player/net.newpipe.newplayer.uiModel/-new-player-view-model-impl/done-entering-pip.html","searchKeys":["doneEnteringPip","open override fun doneEnteringPip()","net.newpipe.newplayer.uiModel.NewPlayerViewModelImpl.doneEnteringPip"]},{"name":"open override fun embeddedDraggedDown(offset: Float)","description":"net.newpipe.newplayer.uiModel.NewPlayerViewModelDummy.embeddedDraggedDown","location":"new-player/net.newpipe.newplayer.uiModel/-new-player-view-model-dummy/embedded-dragged-down.html","searchKeys":["embeddedDraggedDown","open override fun embeddedDraggedDown(offset: Float)","net.newpipe.newplayer.uiModel.NewPlayerViewModelDummy.embeddedDraggedDown"]},{"name":"open override fun embeddedDraggedDown(offset: Float)","description":"net.newpipe.newplayer.uiModel.NewPlayerViewModelImpl.embeddedDraggedDown","location":"new-player/net.newpipe.newplayer.uiModel/-new-player-view-model-impl/embedded-dragged-down.html","searchKeys":["embeddedDraggedDown","open override fun embeddedDraggedDown(offset: Float)","net.newpipe.newplayer.uiModel.NewPlayerViewModelImpl.embeddedDraggedDown"]},{"name":"open override fun fastSeek(count: Int)","description":"net.newpipe.newplayer.uiModel.NewPlayerViewModelImpl.fastSeek","location":"new-player/net.newpipe.newplayer.uiModel/-new-player-view-model-impl/fast-seek.html","searchKeys":["fastSeek","open override fun fastSeek(count: Int)","net.newpipe.newplayer.uiModel.NewPlayerViewModelImpl.fastSeek"]},{"name":"open override fun fastSeek(steps: Int)","description":"net.newpipe.newplayer.uiModel.NewPlayerViewModelDummy.fastSeek","location":"new-player/net.newpipe.newplayer.uiModel/-new-player-view-model-dummy/fast-seek.html","searchKeys":["fastSeek","open override fun fastSeek(steps: Int)","net.newpipe.newplayer.uiModel.NewPlayerViewModelDummy.fastSeek"]},{"name":"open override fun finishFastSeek()","description":"net.newpipe.newplayer.uiModel.NewPlayerViewModelDummy.finishFastSeek","location":"new-player/net.newpipe.newplayer.uiModel/-new-player-view-model-dummy/finish-fast-seek.html","searchKeys":["finishFastSeek","open override fun finishFastSeek()","net.newpipe.newplayer.uiModel.NewPlayerViewModelDummy.finishFastSeek"]},{"name":"open override fun finishFastSeek()","description":"net.newpipe.newplayer.uiModel.NewPlayerViewModelImpl.finishFastSeek","location":"new-player/net.newpipe.newplayer.uiModel/-new-player-view-model-impl/finish-fast-seek.html","searchKeys":["finishFastSeek","open override fun finishFastSeek()","net.newpipe.newplayer.uiModel.NewPlayerViewModelImpl.finishFastSeek"]},{"name":"open override fun getItemFromMediaItem(mediaItem: MediaItem): String","description":"net.newpipe.newplayer.NewPlayerImpl.getItemFromMediaItem","location":"new-player/net.newpipe.newplayer/-new-player-impl/get-item-from-media-item.html","searchKeys":["getItemFromMediaItem","open override fun getItemFromMediaItem(mediaItem: MediaItem): String","net.newpipe.newplayer.NewPlayerImpl.getItemFromMediaItem"]},{"name":"open override fun getRepoInfo(): MediaRepository.RepoMetaInfo","description":"net.newpipe.newplayer.repository.CachingRepository.getRepoInfo","location":"new-player/net.newpipe.newplayer.repository/-caching-repository/get-repo-info.html","searchKeys":["getRepoInfo","open override fun getRepoInfo(): MediaRepository.RepoMetaInfo","net.newpipe.newplayer.repository.CachingRepository.getRepoInfo"]},{"name":"open override fun getRepoInfo(): MediaRepository.RepoMetaInfo","description":"net.newpipe.newplayer.repository.DelayTestRepository.getRepoInfo","location":"new-player/net.newpipe.newplayer.repository/-delay-test-repository/get-repo-info.html","searchKeys":["getRepoInfo","open override fun getRepoInfo(): MediaRepository.RepoMetaInfo","net.newpipe.newplayer.repository.DelayTestRepository.getRepoInfo"]},{"name":"open override fun getRepoInfo(): MediaRepository.RepoMetaInfo","description":"net.newpipe.newplayer.repository.EagerRequestingRepository.getRepoInfo","location":"new-player/net.newpipe.newplayer.repository/-eager-requesting-repository/get-repo-info.html","searchKeys":["getRepoInfo","open override fun getRepoInfo(): MediaRepository.RepoMetaInfo","net.newpipe.newplayer.repository.EagerRequestingRepository.getRepoInfo"]},{"name":"open override fun getRepoInfo(): MediaRepository.RepoMetaInfo","description":"net.newpipe.newplayer.repository.MultiRepository.getRepoInfo","location":"new-player/net.newpipe.newplayer.repository/-multi-repository/get-repo-info.html","searchKeys":["getRepoInfo","open override fun getRepoInfo(): MediaRepository.RepoMetaInfo","net.newpipe.newplayer.repository.MultiRepository.getRepoInfo"]},{"name":"open override fun getRepoInfo(): MediaRepository.RepoMetaInfo","description":"net.newpipe.newplayer.repository.PlaceHolderRepository.getRepoInfo","location":"new-player/net.newpipe.newplayer.repository/-place-holder-repository/get-repo-info.html","searchKeys":["getRepoInfo","open override fun getRepoInfo(): MediaRepository.RepoMetaInfo","net.newpipe.newplayer.repository.PlaceHolderRepository.getRepoInfo"]},{"name":"open override fun hashCode(): Int","description":"net.newpipe.newplayer.data.AudioStreamTrack.hashCode","location":"new-player/net.newpipe.newplayer.data/-audio-stream-track/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","net.newpipe.newplayer.data.AudioStreamTrack.hashCode"]},{"name":"open override fun hashCode(): Int","description":"net.newpipe.newplayer.data.Stream.hashCode","location":"new-player/net.newpipe.newplayer.data/-stream/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","net.newpipe.newplayer.data.Stream.hashCode"]},{"name":"open override fun hashCode(): Int","description":"net.newpipe.newplayer.data.VideoStreamTrack.hashCode","location":"new-player/net.newpipe.newplayer.data/-video-stream-track/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","net.newpipe.newplayer.data.VideoStreamTrack.hashCode"]},{"name":"open override fun initUIState(instanceState: Bundle)","description":"net.newpipe.newplayer.uiModel.NewPlayerViewModelDummy.initUIState","location":"new-player/net.newpipe.newplayer.uiModel/-new-player-view-model-dummy/init-u-i-state.html","searchKeys":["initUIState","open override fun initUIState(instanceState: Bundle)","net.newpipe.newplayer.uiModel.NewPlayerViewModelDummy.initUIState"]},{"name":"open override fun initUIState(instanceState: Bundle)","description":"net.newpipe.newplayer.uiModel.NewPlayerViewModelImpl.initUIState","location":"new-player/net.newpipe.newplayer.uiModel/-new-player-view-model-impl/init-u-i-state.html","searchKeys":["initUIState","open override fun initUIState(instanceState: Bundle)","net.newpipe.newplayer.uiModel.NewPlayerViewModelImpl.initUIState"]},{"name":"open override fun movePlaylistItem(from: Int, to: Int)","description":"net.newpipe.newplayer.uiModel.NewPlayerViewModelDummy.movePlaylistItem","location":"new-player/net.newpipe.newplayer.uiModel/-new-player-view-model-dummy/move-playlist-item.html","searchKeys":["movePlaylistItem","open override fun movePlaylistItem(from: Int, to: Int)","net.newpipe.newplayer.uiModel.NewPlayerViewModelDummy.movePlaylistItem"]},{"name":"open override fun movePlaylistItem(from: Int, to: Int)","description":"net.newpipe.newplayer.uiModel.NewPlayerViewModelImpl.movePlaylistItem","location":"new-player/net.newpipe.newplayer.uiModel/-new-player-view-model-impl/move-playlist-item.html","searchKeys":["movePlaylistItem","open override fun movePlaylistItem(from: Int, to: Int)","net.newpipe.newplayer.uiModel.NewPlayerViewModelImpl.movePlaylistItem"]},{"name":"open override fun movePlaylistItem(fromIndex: Int, toIndex: Int)","description":"net.newpipe.newplayer.NewPlayerImpl.movePlaylistItem","location":"new-player/net.newpipe.newplayer/-new-player-impl/move-playlist-item.html","searchKeys":["movePlaylistItem","open override fun movePlaylistItem(fromIndex: Int, toIndex: Int)","net.newpipe.newplayer.NewPlayerImpl.movePlaylistItem"]},{"name":"open override fun nextStream()","description":"net.newpipe.newplayer.uiModel.NewPlayerViewModelDummy.nextStream","location":"new-player/net.newpipe.newplayer.uiModel/-new-player-view-model-dummy/next-stream.html","searchKeys":["nextStream","open override fun nextStream()","net.newpipe.newplayer.uiModel.NewPlayerViewModelDummy.nextStream"]},{"name":"open override fun nextStream()","description":"net.newpipe.newplayer.uiModel.NewPlayerViewModelImpl.nextStream","location":"new-player/net.newpipe.newplayer.uiModel/-new-player-view-model-impl/next-stream.html","searchKeys":["nextStream","open override fun nextStream()","net.newpipe.newplayer.uiModel.NewPlayerViewModelImpl.nextStream"]},{"name":"open override fun onBackPressed()","description":"net.newpipe.newplayer.uiModel.NewPlayerViewModelDummy.onBackPressed","location":"new-player/net.newpipe.newplayer.uiModel/-new-player-view-model-dummy/on-back-pressed.html","searchKeys":["onBackPressed","open override fun onBackPressed()","net.newpipe.newplayer.uiModel.NewPlayerViewModelDummy.onBackPressed"]},{"name":"open override fun onBackPressed()","description":"net.newpipe.newplayer.uiModel.NewPlayerViewModelImpl.onBackPressed","location":"new-player/net.newpipe.newplayer.uiModel/-new-player-view-model-impl/on-back-pressed.html","searchKeys":["onBackPressed","open override fun onBackPressed()","net.newpipe.newplayer.uiModel.NewPlayerViewModelImpl.onBackPressed"]},{"name":"open override fun onPictureInPictureModeChanged(isPictureInPictureMode: Boolean)","description":"net.newpipe.newplayer.uiModel.NewPlayerViewModelDummy.onPictureInPictureModeChanged","location":"new-player/net.newpipe.newplayer.uiModel/-new-player-view-model-dummy/on-picture-in-picture-mode-changed.html","searchKeys":["onPictureInPictureModeChanged","open override fun onPictureInPictureModeChanged(isPictureInPictureMode: Boolean)","net.newpipe.newplayer.uiModel.NewPlayerViewModelDummy.onPictureInPictureModeChanged"]},{"name":"open override fun onPictureInPictureModeChanged(isPictureInPictureMode: Boolean)","description":"net.newpipe.newplayer.uiModel.NewPlayerViewModelImpl.onPictureInPictureModeChanged","location":"new-player/net.newpipe.newplayer.uiModel/-new-player-view-model-impl/on-picture-in-picture-mode-changed.html","searchKeys":["onPictureInPictureModeChanged","open override fun onPictureInPictureModeChanged(isPictureInPictureMode: Boolean)","net.newpipe.newplayer.uiModel.NewPlayerViewModelImpl.onPictureInPictureModeChanged"]},{"name":"open override fun onStorePlaylist()","description":"net.newpipe.newplayer.uiModel.NewPlayerViewModelDummy.onStorePlaylist","location":"new-player/net.newpipe.newplayer.uiModel/-new-player-view-model-dummy/on-store-playlist.html","searchKeys":["onStorePlaylist","open override fun onStorePlaylist()","net.newpipe.newplayer.uiModel.NewPlayerViewModelDummy.onStorePlaylist"]},{"name":"open override fun onStorePlaylist()","description":"net.newpipe.newplayer.uiModel.NewPlayerViewModelImpl.onStorePlaylist","location":"new-player/net.newpipe.newplayer.uiModel/-new-player-view-model-impl/on-store-playlist.html","searchKeys":["onStorePlaylist","open override fun onStorePlaylist()","net.newpipe.newplayer.uiModel.NewPlayerViewModelImpl.onStorePlaylist"]},{"name":"open override fun onStreamItemDragFinished()","description":"net.newpipe.newplayer.uiModel.NewPlayerViewModelDummy.onStreamItemDragFinished","location":"new-player/net.newpipe.newplayer.uiModel/-new-player-view-model-dummy/on-stream-item-drag-finished.html","searchKeys":["onStreamItemDragFinished","open override fun onStreamItemDragFinished()","net.newpipe.newplayer.uiModel.NewPlayerViewModelDummy.onStreamItemDragFinished"]},{"name":"open override fun onStreamItemDragFinished()","description":"net.newpipe.newplayer.uiModel.NewPlayerViewModelImpl.onStreamItemDragFinished","location":"new-player/net.newpipe.newplayer.uiModel/-new-player-view-model-impl/on-stream-item-drag-finished.html","searchKeys":["onStreamItemDragFinished","open override fun onStreamItemDragFinished()","net.newpipe.newplayer.uiModel.NewPlayerViewModelImpl.onStreamItemDragFinished"]},{"name":"open override fun pause()","description":"net.newpipe.newplayer.NewPlayerImpl.pause","location":"new-player/net.newpipe.newplayer/-new-player-impl/pause.html","searchKeys":["pause","open override fun pause()","net.newpipe.newplayer.NewPlayerImpl.pause"]},{"name":"open override fun pause()","description":"net.newpipe.newplayer.uiModel.NewPlayerViewModelDummy.pause","location":"new-player/net.newpipe.newplayer.uiModel/-new-player-view-model-dummy/pause.html","searchKeys":["pause","open override fun pause()","net.newpipe.newplayer.uiModel.NewPlayerViewModelDummy.pause"]},{"name":"open override fun pause()","description":"net.newpipe.newplayer.uiModel.NewPlayerViewModelImpl.pause","location":"new-player/net.newpipe.newplayer.uiModel/-new-player-view-model-impl/pause.html","searchKeys":["pause","open override fun pause()","net.newpipe.newplayer.uiModel.NewPlayerViewModelImpl.pause"]},{"name":"open override fun play()","description":"net.newpipe.newplayer.NewPlayerImpl.play","location":"new-player/net.newpipe.newplayer/-new-player-impl/play.html","searchKeys":["play","open override fun play()","net.newpipe.newplayer.NewPlayerImpl.play"]},{"name":"open override fun play()","description":"net.newpipe.newplayer.uiModel.NewPlayerViewModelDummy.play","location":"new-player/net.newpipe.newplayer.uiModel/-new-player-view-model-dummy/play.html","searchKeys":["play","open override fun play()","net.newpipe.newplayer.uiModel.NewPlayerViewModelDummy.play"]},{"name":"open override fun play()","description":"net.newpipe.newplayer.uiModel.NewPlayerViewModelImpl.play","location":"new-player/net.newpipe.newplayer.uiModel/-new-player-view-model-impl/play.html","searchKeys":["play","open override fun play()","net.newpipe.newplayer.uiModel.NewPlayerViewModelImpl.play"]},{"name":"open override fun playStream(item: String, playMode: PlayMode)","description":"net.newpipe.newplayer.NewPlayerImpl.playStream","location":"new-player/net.newpipe.newplayer/-new-player-impl/play-stream.html","searchKeys":["playStream","open override fun playStream(item: String, playMode: PlayMode)","net.newpipe.newplayer.NewPlayerImpl.playStream"]},{"name":"open override fun prepare()","description":"net.newpipe.newplayer.NewPlayerImpl.prepare","location":"new-player/net.newpipe.newplayer/-new-player-impl/prepare.html","searchKeys":["prepare","open override fun prepare()","net.newpipe.newplayer.NewPlayerImpl.prepare"]},{"name":"open override fun prevStream()","description":"net.newpipe.newplayer.uiModel.NewPlayerViewModelDummy.prevStream","location":"new-player/net.newpipe.newplayer.uiModel/-new-player-view-model-dummy/prev-stream.html","searchKeys":["prevStream","open override fun prevStream()","net.newpipe.newplayer.uiModel.NewPlayerViewModelDummy.prevStream"]},{"name":"open override fun prevStream()","description":"net.newpipe.newplayer.uiModel.NewPlayerViewModelImpl.prevStream","location":"new-player/net.newpipe.newplayer.uiModel/-new-player-view-model-impl/prev-stream.html","searchKeys":["prevStream","open override fun prevStream()","net.newpipe.newplayer.uiModel.NewPlayerViewModelImpl.prevStream"]},{"name":"open override fun release()","description":"net.newpipe.newplayer.NewPlayerImpl.release","location":"new-player/net.newpipe.newplayer/-new-player-impl/release.html","searchKeys":["release","open override fun release()","net.newpipe.newplayer.NewPlayerImpl.release"]},{"name":"open override fun removePlaylistItem(uniqueId: Long)","description":"net.newpipe.newplayer.NewPlayerImpl.removePlaylistItem","location":"new-player/net.newpipe.newplayer/-new-player-impl/remove-playlist-item.html","searchKeys":["removePlaylistItem","open override fun removePlaylistItem(uniqueId: Long)","net.newpipe.newplayer.NewPlayerImpl.removePlaylistItem"]},{"name":"open override fun removePlaylistItem(uniqueId: Long)","description":"net.newpipe.newplayer.uiModel.NewPlayerViewModelDummy.removePlaylistItem","location":"new-player/net.newpipe.newplayer.uiModel/-new-player-view-model-dummy/remove-playlist-item.html","searchKeys":["removePlaylistItem","open override fun removePlaylistItem(uniqueId: Long)","net.newpipe.newplayer.uiModel.NewPlayerViewModelDummy.removePlaylistItem"]},{"name":"open override fun removePlaylistItem(uniqueId: Long)","description":"net.newpipe.newplayer.uiModel.NewPlayerViewModelImpl.removePlaylistItem","location":"new-player/net.newpipe.newplayer.uiModel/-new-player-view-model-impl/remove-playlist-item.html","searchKeys":["removePlaylistItem","open override fun removePlaylistItem(uniqueId: Long)","net.newpipe.newplayer.uiModel.NewPlayerViewModelImpl.removePlaylistItem"]},{"name":"open override fun resetHideDelayTimer()","description":"net.newpipe.newplayer.uiModel.NewPlayerViewModelDummy.resetHideDelayTimer","location":"new-player/net.newpipe.newplayer.uiModel/-new-player-view-model-dummy/reset-hide-delay-timer.html","searchKeys":["resetHideDelayTimer","open override fun resetHideDelayTimer()","net.newpipe.newplayer.uiModel.NewPlayerViewModelDummy.resetHideDelayTimer"]},{"name":"open override fun resetHideDelayTimer()","description":"net.newpipe.newplayer.uiModel.NewPlayerViewModelImpl.resetHideDelayTimer","location":"new-player/net.newpipe.newplayer.uiModel/-new-player-view-model-impl/reset-hide-delay-timer.html","searchKeys":["resetHideDelayTimer","open override fun resetHideDelayTimer()","net.newpipe.newplayer.uiModel.NewPlayerViewModelImpl.resetHideDelayTimer"]},{"name":"open override fun seekPositionChanged(newValue: Float)","description":"net.newpipe.newplayer.uiModel.NewPlayerViewModelDummy.seekPositionChanged","location":"new-player/net.newpipe.newplayer.uiModel/-new-player-view-model-dummy/seek-position-changed.html","searchKeys":["seekPositionChanged","open override fun seekPositionChanged(newValue: Float)","net.newpipe.newplayer.uiModel.NewPlayerViewModelDummy.seekPositionChanged"]},{"name":"open override fun seekPositionChanged(newValue: Float)","description":"net.newpipe.newplayer.uiModel.NewPlayerViewModelImpl.seekPositionChanged","location":"new-player/net.newpipe.newplayer.uiModel/-new-player-view-model-impl/seek-position-changed.html","searchKeys":["seekPositionChanged","open override fun seekPositionChanged(newValue: Float)","net.newpipe.newplayer.uiModel.NewPlayerViewModelImpl.seekPositionChanged"]},{"name":"open override fun seekingFinished()","description":"net.newpipe.newplayer.uiModel.NewPlayerViewModelDummy.seekingFinished","location":"new-player/net.newpipe.newplayer.uiModel/-new-player-view-model-dummy/seeking-finished.html","searchKeys":["seekingFinished","open override fun seekingFinished()","net.newpipe.newplayer.uiModel.NewPlayerViewModelDummy.seekingFinished"]},{"name":"open override fun seekingFinished()","description":"net.newpipe.newplayer.uiModel.NewPlayerViewModelImpl.seekingFinished","location":"new-player/net.newpipe.newplayer.uiModel/-new-player-view-model-impl/seeking-finished.html","searchKeys":["seekingFinished","open override fun seekingFinished()","net.newpipe.newplayer.uiModel.NewPlayerViewModelImpl.seekingFinished"]},{"name":"open override fun selectChapter(index: Int)","description":"net.newpipe.newplayer.NewPlayerImpl.selectChapter","location":"new-player/net.newpipe.newplayer/-new-player-impl/select-chapter.html","searchKeys":["selectChapter","open override fun selectChapter(index: Int)","net.newpipe.newplayer.NewPlayerImpl.selectChapter"]},{"name":"open override fun streamSelected(streamId: Int)","description":"net.newpipe.newplayer.uiModel.NewPlayerViewModelDummy.streamSelected","location":"new-player/net.newpipe.newplayer.uiModel/-new-player-view-model-dummy/stream-selected.html","searchKeys":["streamSelected","open override fun streamSelected(streamId: Int)","net.newpipe.newplayer.uiModel.NewPlayerViewModelDummy.streamSelected"]},{"name":"open override fun streamSelected(streamId: Int)","description":"net.newpipe.newplayer.uiModel.NewPlayerViewModelImpl.streamSelected","location":"new-player/net.newpipe.newplayer.uiModel/-new-player-view-model-impl/stream-selected.html","searchKeys":["streamSelected","open override fun streamSelected(streamId: Int)","net.newpipe.newplayer.uiModel.NewPlayerViewModelImpl.streamSelected"]},{"name":"open override fun toLongIdentifierString(): String","description":"net.newpipe.newplayer.data.AudioStreamTrack.toLongIdentifierString","location":"new-player/net.newpipe.newplayer.data/-audio-stream-track/to-long-identifier-string.html","searchKeys":["toLongIdentifierString","open override fun toLongIdentifierString(): String","net.newpipe.newplayer.data.AudioStreamTrack.toLongIdentifierString"]},{"name":"open override fun toLongIdentifierString(): String","description":"net.newpipe.newplayer.data.VideoStreamTrack.toLongIdentifierString","location":"new-player/net.newpipe.newplayer.data/-video-stream-track/to-long-identifier-string.html","searchKeys":["toLongIdentifierString","open override fun toLongIdentifierString(): String","net.newpipe.newplayer.data.VideoStreamTrack.toLongIdentifierString"]},{"name":"open override fun toShortIdentifierString(): String","description":"net.newpipe.newplayer.data.AudioStreamTrack.toShortIdentifierString","location":"new-player/net.newpipe.newplayer.data/-audio-stream-track/to-short-identifier-string.html","searchKeys":["toShortIdentifierString","open override fun toShortIdentifierString(): String","net.newpipe.newplayer.data.AudioStreamTrack.toShortIdentifierString"]},{"name":"open override fun toShortIdentifierString(): String","description":"net.newpipe.newplayer.data.VideoStreamTrack.toShortIdentifierString","location":"new-player/net.newpipe.newplayer.data/-video-stream-track/to-short-identifier-string.html","searchKeys":["toShortIdentifierString","open override fun toShortIdentifierString(): String","net.newpipe.newplayer.data.VideoStreamTrack.toShortIdentifierString"]},{"name":"open override fun toString(): String","description":"net.newpipe.newplayer.data.AudioStreamTrack.toString","location":"new-player/net.newpipe.newplayer.data/-audio-stream-track/to-string.html","searchKeys":["toString","open override fun toString(): String","net.newpipe.newplayer.data.AudioStreamTrack.toString"]},{"name":"open override fun toString(): String","description":"net.newpipe.newplayer.data.VideoStreamTrack.toString","location":"new-player/net.newpipe.newplayer.data/-video-stream-track/to-string.html","searchKeys":["toString","open override fun toString(): String","net.newpipe.newplayer.data.VideoStreamTrack.toString"]},{"name":"open override fun toggleShuffle()","description":"net.newpipe.newplayer.uiModel.NewPlayerViewModelDummy.toggleShuffle","location":"new-player/net.newpipe.newplayer.uiModel/-new-player-view-model-dummy/toggle-shuffle.html","searchKeys":["toggleShuffle","open override fun toggleShuffle()","net.newpipe.newplayer.uiModel.NewPlayerViewModelDummy.toggleShuffle"]},{"name":"open override fun toggleShuffle()","description":"net.newpipe.newplayer.uiModel.NewPlayerViewModelImpl.toggleShuffle","location":"new-player/net.newpipe.newplayer.uiModel/-new-player-view-model-impl/toggle-shuffle.html","searchKeys":["toggleShuffle","open override fun toggleShuffle()","net.newpipe.newplayer.uiModel.NewPlayerViewModelImpl.toggleShuffle"]},{"name":"open override fun volumeChange(changeRate: Float)","description":"net.newpipe.newplayer.uiModel.NewPlayerViewModelDummy.volumeChange","location":"new-player/net.newpipe.newplayer.uiModel/-new-player-view-model-dummy/volume-change.html","searchKeys":["volumeChange","open override fun volumeChange(changeRate: Float)","net.newpipe.newplayer.uiModel.NewPlayerViewModelDummy.volumeChange"]},{"name":"open override fun volumeChange(changeRate: Float)","description":"net.newpipe.newplayer.uiModel.NewPlayerViewModelImpl.volumeChange","location":"new-player/net.newpipe.newplayer.uiModel/-new-player-view-model-impl/volume-change.html","searchKeys":["volumeChange","open override fun volumeChange(changeRate: Float)","net.newpipe.newplayer.uiModel.NewPlayerViewModelImpl.volumeChange"]},{"name":"open override val bufferedPercentage: Int","description":"net.newpipe.newplayer.NewPlayerImpl.bufferedPercentage","location":"new-player/net.newpipe.newplayer/-new-player-impl/buffered-percentage.html","searchKeys":["bufferedPercentage","open override val bufferedPercentage: Int","net.newpipe.newplayer.NewPlayerImpl.bufferedPercentage"]},{"name":"open override val currentChapters: StateFlow<List<Chapter>>","description":"net.newpipe.newplayer.NewPlayerImpl.currentChapters","location":"new-player/net.newpipe.newplayer/-new-player-impl/current-chapters.html","searchKeys":["currentChapters","open override val currentChapters: StateFlow<List<Chapter>>","net.newpipe.newplayer.NewPlayerImpl.currentChapters"]},{"name":"open override val currentlyAvailableTracks: StateFlow<List<StreamTrack>>","description":"net.newpipe.newplayer.NewPlayerImpl.currentlyAvailableTracks","location":"new-player/net.newpipe.newplayer/-new-player-impl/currently-available-tracks.html","searchKeys":["currentlyAvailableTracks","open override val currentlyAvailableTracks: StateFlow<List<StreamTrack>>","net.newpipe.newplayer.NewPlayerImpl.currentlyAvailableTracks"]},{"name":"open override val currentlyPlaying: StateFlow<MediaItem?>","description":"net.newpipe.newplayer.NewPlayerImpl.currentlyPlaying","location":"new-player/net.newpipe.newplayer/-new-player-impl/currently-playing.html","searchKeys":["currentlyPlaying","open override val currentlyPlaying: StateFlow<MediaItem?>","net.newpipe.newplayer.NewPlayerImpl.currentlyPlaying"]},{"name":"open override val currentlyPlayingTracks: StateFlow<List<StreamTrack>>","description":"net.newpipe.newplayer.NewPlayerImpl.currentlyPlayingTracks","location":"new-player/net.newpipe.newplayer/-new-player-impl/currently-playing-tracks.html","searchKeys":["currentlyPlayingTracks","open override val currentlyPlayingTracks: StateFlow<List<StreamTrack>>","net.newpipe.newplayer.NewPlayerImpl.currentlyPlayingTracks"]},{"name":"open override val duration: Long","description":"net.newpipe.newplayer.NewPlayerImpl.duration","location":"new-player/net.newpipe.newplayer/-new-player-impl/duration.html","searchKeys":["duration","open override val duration: Long","net.newpipe.newplayer.NewPlayerImpl.duration"]},{"name":"open override val embeddedPlayerDraggedDownBy: SharedFlow<Float>","description":"net.newpipe.newplayer.uiModel.NewPlayerViewModelDummy.embeddedPlayerDraggedDownBy","location":"new-player/net.newpipe.newplayer.uiModel/-new-player-view-model-dummy/embedded-player-dragged-down-by.html","searchKeys":["embeddedPlayerDraggedDownBy","open override val embeddedPlayerDraggedDownBy: SharedFlow<Float>","net.newpipe.newplayer.uiModel.NewPlayerViewModelDummy.embeddedPlayerDraggedDownBy"]},{"name":"open override val embeddedPlayerDraggedDownBy: SharedFlow<Float>","description":"net.newpipe.newplayer.uiModel.NewPlayerViewModelImpl.embeddedPlayerDraggedDownBy","location":"new-player/net.newpipe.newplayer.uiModel/-new-player-view-model-impl/embedded-player-dragged-down-by.html","searchKeys":["embeddedPlayerDraggedDownBy","open override val embeddedPlayerDraggedDownBy: SharedFlow<Float>","net.newpipe.newplayer.uiModel.NewPlayerViewModelImpl.embeddedPlayerDraggedDownBy"]},{"name":"open override val errorFlow: SharedFlow<Exception>","description":"net.newpipe.newplayer.NewPlayerImpl.errorFlow","location":"new-player/net.newpipe.newplayer/-new-player-impl/error-flow.html","searchKeys":["errorFlow","open override val errorFlow: SharedFlow<Exception>","net.newpipe.newplayer.NewPlayerImpl.errorFlow"]},{"name":"open override val exoPlayer: StateFlow<ExoPlayer?>","description":"net.newpipe.newplayer.NewPlayerImpl.exoPlayer","location":"new-player/net.newpipe.newplayer/-new-player-impl/exo-player.html","searchKeys":["exoPlayer","open override val exoPlayer: StateFlow<ExoPlayer?>","net.newpipe.newplayer.NewPlayerImpl.exoPlayer"]},{"name":"open override val fileFormat: String","description":"net.newpipe.newplayer.data.AudioStreamTrack.fileFormat","location":"new-player/net.newpipe.newplayer.data/-audio-stream-track/file-format.html","searchKeys":["fileFormat","open override val fileFormat: String","net.newpipe.newplayer.data.AudioStreamTrack.fileFormat"]},{"name":"open override val fileFormat: String","description":"net.newpipe.newplayer.data.VideoStreamTrack.fileFormat","location":"new-player/net.newpipe.newplayer.data/-video-stream-track/file-format.html","searchKeys":["fileFormat","open override val fileFormat: String","net.newpipe.newplayer.data.VideoStreamTrack.fileFormat"]},{"name":"open override val hasAudioTracks: Boolean","description":"net.newpipe.newplayer.data.MultiSelection.hasAudioTracks","location":"new-player/net.newpipe.newplayer.data/-multi-selection/has-audio-tracks.html","searchKeys":["hasAudioTracks","open override val hasAudioTracks: Boolean","net.newpipe.newplayer.data.MultiSelection.hasAudioTracks"]},{"name":"open override val hasAudioTracks: Boolean","description":"net.newpipe.newplayer.data.SingleSelection.hasAudioTracks","location":"new-player/net.newpipe.newplayer.data/-single-selection/has-audio-tracks.html","searchKeys":["hasAudioTracks","open override val hasAudioTracks: Boolean","net.newpipe.newplayer.data.SingleSelection.hasAudioTracks"]},{"name":"open override val hasVideoTracks: Boolean","description":"net.newpipe.newplayer.data.MultiSelection.hasVideoTracks","location":"new-player/net.newpipe.newplayer.data/-multi-selection/has-video-tracks.html","searchKeys":["hasVideoTracks","open override val hasVideoTracks: Boolean","net.newpipe.newplayer.data.MultiSelection.hasVideoTracks"]},{"name":"open override val hasVideoTracks: Boolean","description":"net.newpipe.newplayer.data.SingleSelection.hasVideoTracks","location":"new-player/net.newpipe.newplayer.data/-single-selection/has-video-tracks.html","searchKeys":["hasVideoTracks","open override val hasVideoTracks: Boolean","net.newpipe.newplayer.data.SingleSelection.hasVideoTracks"]},{"name":"open override val isDynamic: Boolean","description":"net.newpipe.newplayer.data.MultiSelection.isDynamic","location":"new-player/net.newpipe.newplayer.data/-multi-selection/is-dynamic.html","searchKeys":["isDynamic","open override val isDynamic: Boolean","net.newpipe.newplayer.data.MultiSelection.isDynamic"]},{"name":"open override val isDynamic: Boolean","description":"net.newpipe.newplayer.data.SingleSelection.isDynamic","location":"new-player/net.newpipe.newplayer.data/-single-selection/is-dynamic.html","searchKeys":["isDynamic","open override val isDynamic: Boolean","net.newpipe.newplayer.data.SingleSelection.isDynamic"]},{"name":"open override val item: String","description":"net.newpipe.newplayer.data.MultiSelection.item","location":"new-player/net.newpipe.newplayer.data/-multi-selection/item.html","searchKeys":["item","open override val item: String","net.newpipe.newplayer.data.MultiSelection.item"]},{"name":"open override val item: String","description":"net.newpipe.newplayer.data.SingleSelection.item","location":"new-player/net.newpipe.newplayer.data/-single-selection/item.html","searchKeys":["item","open override val item: String","net.newpipe.newplayer.data.SingleSelection.item"]},{"name":"open override val notificationIcon: IconCompat","description":"net.newpipe.newplayer.NewPlayerImpl.notificationIcon","location":"new-player/net.newpipe.newplayer/-new-player-impl/notification-icon.html","searchKeys":["notificationIcon","open override val notificationIcon: IconCompat","net.newpipe.newplayer.NewPlayerImpl.notificationIcon"]},{"name":"open override val onExoPlayerEvent: SharedFlow<Pair<Player, Player.Events>>","description":"net.newpipe.newplayer.NewPlayerImpl.onExoPlayerEvent","location":"new-player/net.newpipe.newplayer/-new-player-impl/on-exo-player-event.html","searchKeys":["onExoPlayerEvent","open override val onExoPlayerEvent: SharedFlow<Pair<Player, Player.Events>>","net.newpipe.newplayer.NewPlayerImpl.onExoPlayerEvent"]},{"name":"open override val playerActivityClass: Class<out Activity>","description":"net.newpipe.newplayer.NewPlayerImpl.playerActivityClass","location":"new-player/net.newpipe.newplayer/-new-player-impl/player-activity-class.html","searchKeys":["playerActivityClass","open override val playerActivityClass: Class<out Activity>","net.newpipe.newplayer.NewPlayerImpl.playerActivityClass"]},{"name":"open override val playlist: StateFlow<List<MediaItem>>","description":"net.newpipe.newplayer.NewPlayerImpl.playlist","location":"new-player/net.newpipe.newplayer/-new-player-impl/playlist.html","searchKeys":["playlist","open override val playlist: StateFlow<List<MediaItem>>","net.newpipe.newplayer.NewPlayerImpl.playlist"]},{"name":"open override val repository: MediaRepository","description":"net.newpipe.newplayer.NewPlayerImpl.repository","location":"new-player/net.newpipe.newplayer/-new-player-impl/repository.html","searchKeys":["repository","open override val repository: MediaRepository","net.newpipe.newplayer.NewPlayerImpl.repository"]},{"name":"open override val rescueStreamFault: suspend (item: String?, mediaItem: MediaItem?, Exception, repository: MediaRepository) -> StreamExceptionResponse","description":"net.newpipe.newplayer.NewPlayerImpl.rescueStreamFault","location":"new-player/net.newpipe.newplayer/-new-player-impl/rescue-stream-fault.html","searchKeys":["rescueStreamFault","open override val rescueStreamFault: suspend (item: String?, mediaItem: MediaItem?, Exception, repository: MediaRepository) -> StreamExceptionResponse","net.newpipe.newplayer.NewPlayerImpl.rescueStreamFault"]},{"name":"open override val tracks: List<StreamTrack>","description":"net.newpipe.newplayer.data.MultiSelection.tracks","location":"new-player/net.newpipe.newplayer.data/-multi-selection/tracks.html","searchKeys":["tracks","open override val tracks: List<StreamTrack>","net.newpipe.newplayer.data.MultiSelection.tracks"]},{"name":"open override val tracks: List<StreamTrack>","description":"net.newpipe.newplayer.data.SingleSelection.tracks","location":"new-player/net.newpipe.newplayer.data/-single-selection/tracks.html","searchKeys":["tracks","open override val tracks: List<StreamTrack>","net.newpipe.newplayer.data.SingleSelection.tracks"]},{"name":"open override val uiState: MutableStateFlow<NewPlayerUIState>","description":"net.newpipe.newplayer.uiModel.NewPlayerViewModelDummy.uiState","location":"new-player/net.newpipe.newplayer.uiModel/-new-player-view-model-dummy/ui-state.html","searchKeys":["uiState","open override val uiState: MutableStateFlow<NewPlayerUIState>","net.newpipe.newplayer.uiModel.NewPlayerViewModelDummy.uiState"]},{"name":"open override val uiState: StateFlow<NewPlayerUIState>","description":"net.newpipe.newplayer.uiModel.NewPlayerViewModelImpl.uiState","location":"new-player/net.newpipe.newplayer.uiModel/-new-player-view-model-impl/ui-state.html","searchKeys":["uiState","open override val uiState: StateFlow<NewPlayerUIState>","net.newpipe.newplayer.uiModel.NewPlayerViewModelImpl.uiState"]},{"name":"open override var contentFitMode: ContentScale","description":"net.newpipe.newplayer.uiModel.NewPlayerViewModelDummy.contentFitMode","location":"new-player/net.newpipe.newplayer.uiModel/-new-player-view-model-dummy/content-fit-mode.html","searchKeys":["contentFitMode","open override var contentFitMode: ContentScale","net.newpipe.newplayer.uiModel.NewPlayerViewModelDummy.contentFitMode"]},{"name":"open override var contentFitMode: ContentScale","description":"net.newpipe.newplayer.uiModel.NewPlayerViewModelImpl.contentFitMode","location":"new-player/net.newpipe.newplayer.uiModel/-new-player-view-model-impl/content-fit-mode.html","searchKeys":["contentFitMode","open override var contentFitMode: ContentScale","net.newpipe.newplayer.uiModel.NewPlayerViewModelImpl.contentFitMode"]},{"name":"open override var currentPosition: Long","description":"net.newpipe.newplayer.NewPlayerImpl.currentPosition","location":"new-player/net.newpipe.newplayer/-new-player-impl/current-position.html","searchKeys":["currentPosition","open override var currentPosition: Long","net.newpipe.newplayer.NewPlayerImpl.currentPosition"]},{"name":"open override var currentStreamLanguageConstraint: String?","description":"net.newpipe.newplayer.NewPlayerImpl.currentStreamLanguageConstraint","location":"new-player/net.newpipe.newplayer/-new-player-impl/current-stream-language-constraint.html","searchKeys":["currentStreamLanguageConstraint","open override var currentStreamLanguageConstraint: String?","net.newpipe.newplayer.NewPlayerImpl.currentStreamLanguageConstraint"]},{"name":"open override var currentlyPlayingPlaylistItem: Int","description":"net.newpipe.newplayer.NewPlayerImpl.currentlyPlayingPlaylistItem","location":"new-player/net.newpipe.newplayer/-new-player-impl/currently-playing-playlist-item.html","searchKeys":["currentlyPlayingPlaylistItem","open override var currentlyPlayingPlaylistItem: Int","net.newpipe.newplayer.NewPlayerImpl.currentlyPlayingPlaylistItem"]},{"name":"open override var deviceInPowerSaveMode: Boolean","description":"net.newpipe.newplayer.uiModel.NewPlayerViewModelDummy.deviceInPowerSaveMode","location":"new-player/net.newpipe.newplayer.uiModel/-new-player-view-model-dummy/device-in-power-save-mode.html","searchKeys":["deviceInPowerSaveMode","open override var deviceInPowerSaveMode: Boolean","net.newpipe.newplayer.uiModel.NewPlayerViewModelDummy.deviceInPowerSaveMode"]},{"name":"open override var deviceInPowerSaveMode: Boolean","description":"net.newpipe.newplayer.uiModel.NewPlayerViewModelImpl.deviceInPowerSaveMode","location":"new-player/net.newpipe.newplayer.uiModel/-new-player-view-model-impl/device-in-power-save-mode.html","searchKeys":["deviceInPowerSaveMode","open override var deviceInPowerSaveMode: Boolean","net.newpipe.newplayer.uiModel.NewPlayerViewModelImpl.deviceInPowerSaveMode"]},{"name":"open override var fastSeekAmountSec: Int","description":"net.newpipe.newplayer.NewPlayerImpl.fastSeekAmountSec","location":"new-player/net.newpipe.newplayer/-new-player-impl/fast-seek-amount-sec.html","searchKeys":["fastSeekAmountSec","open override var fastSeekAmountSec: Int","net.newpipe.newplayer.NewPlayerImpl.fastSeekAmountSec"]},{"name":"open override var maxContentRatio: Float","description":"net.newpipe.newplayer.uiModel.NewPlayerViewModelDummy.maxContentRatio","location":"new-player/net.newpipe.newplayer.uiModel/-new-player-view-model-dummy/max-content-ratio.html","searchKeys":["maxContentRatio","open override var maxContentRatio: Float","net.newpipe.newplayer.uiModel.NewPlayerViewModelDummy.maxContentRatio"]},{"name":"open override var maxContentRatio: Float","description":"net.newpipe.newplayer.uiModel.NewPlayerViewModelImpl.maxContentRatio","location":"new-player/net.newpipe.newplayer.uiModel/-new-player-view-model-impl/max-content-ratio.html","searchKeys":["maxContentRatio","open override var maxContentRatio: Float","net.newpipe.newplayer.uiModel.NewPlayerViewModelImpl.maxContentRatio"]},{"name":"open override var minContentRatio: Float","description":"net.newpipe.newplayer.uiModel.NewPlayerViewModelDummy.minContentRatio","location":"new-player/net.newpipe.newplayer.uiModel/-new-player-view-model-dummy/min-content-ratio.html","searchKeys":["minContentRatio","open override var minContentRatio: Float","net.newpipe.newplayer.uiModel.NewPlayerViewModelDummy.minContentRatio"]},{"name":"open override var minContentRatio: Float","description":"net.newpipe.newplayer.uiModel.NewPlayerViewModelImpl.minContentRatio","location":"new-player/net.newpipe.newplayer.uiModel/-new-player-view-model-impl/min-content-ratio.html","searchKeys":["minContentRatio","open override var minContentRatio: Float","net.newpipe.newplayer.uiModel.NewPlayerViewModelImpl.minContentRatio"]},{"name":"open override var newPlayer: NewPlayer?","description":"net.newpipe.newplayer.uiModel.NewPlayerViewModelDummy.newPlayer","location":"new-player/net.newpipe.newplayer.uiModel/-new-player-view-model-dummy/new-player.html","searchKeys":["newPlayer","open override var newPlayer: NewPlayer?","net.newpipe.newplayer.uiModel.NewPlayerViewModelDummy.newPlayer"]},{"name":"open override var newPlayer: NewPlayer?","description":"net.newpipe.newplayer.uiModel.NewPlayerViewModelImpl.newPlayer","location":"new-player/net.newpipe.newplayer.uiModel/-new-player-view-model-impl/new-player.html","searchKeys":["newPlayer","open override var newPlayer: NewPlayer?","net.newpipe.newplayer.uiModel.NewPlayerViewModelImpl.newPlayer"]},{"name":"open override var playBackMode: MutableStateFlow<PlayMode>","description":"net.newpipe.newplayer.NewPlayerImpl.playBackMode","location":"new-player/net.newpipe.newplayer/-new-player-impl/play-back-mode.html","searchKeys":["playBackMode","open override var playBackMode: MutableStateFlow<PlayMode>","net.newpipe.newplayer.NewPlayerImpl.playBackMode"]},{"name":"open override var playWhenReady: Boolean","description":"net.newpipe.newplayer.NewPlayerImpl.playWhenReady","location":"new-player/net.newpipe.newplayer/-new-player-impl/play-when-ready.html","searchKeys":["playWhenReady","open override var playWhenReady: Boolean","net.newpipe.newplayer.NewPlayerImpl.playWhenReady"]},{"name":"open override var preferredStreamLanguages: List<String>","description":"net.newpipe.newplayer.NewPlayerImpl.preferredStreamLanguages","location":"new-player/net.newpipe.newplayer/-new-player-impl/preferred-stream-languages.html","searchKeys":["preferredStreamLanguages","open override var preferredStreamLanguages: List<String>","net.newpipe.newplayer.NewPlayerImpl.preferredStreamLanguages"]},{"name":"open override var repeatMode: RepeatMode","description":"net.newpipe.newplayer.NewPlayerImpl.repeatMode","location":"new-player/net.newpipe.newplayer/-new-player-impl/repeat-mode.html","searchKeys":["repeatMode","open override var repeatMode: RepeatMode","net.newpipe.newplayer.NewPlayerImpl.repeatMode"]},{"name":"open override var shuffle: Boolean","description":"net.newpipe.newplayer.NewPlayerImpl.shuffle","location":"new-player/net.newpipe.newplayer/-new-player-impl/shuffle.html","searchKeys":["shuffle","open override var shuffle: Boolean","net.newpipe.newplayer.NewPlayerImpl.shuffle"]},{"name":"open suspend override fun getChapters(item: String): List<Chapter>","description":"net.newpipe.newplayer.repository.CachingRepository.getChapters","location":"new-player/net.newpipe.newplayer.repository/-caching-repository/get-chapters.html","searchKeys":["getChapters","open suspend override fun getChapters(item: String): List<Chapter>","net.newpipe.newplayer.repository.CachingRepository.getChapters"]},{"name":"open suspend override fun getChapters(item: String): List<Chapter>","description":"net.newpipe.newplayer.repository.DelayTestRepository.getChapters","location":"new-player/net.newpipe.newplayer.repository/-delay-test-repository/get-chapters.html","searchKeys":["getChapters","open suspend override fun getChapters(item: String): List<Chapter>","net.newpipe.newplayer.repository.DelayTestRepository.getChapters"]},{"name":"open suspend override fun getChapters(item: String): List<Chapter>","description":"net.newpipe.newplayer.repository.EagerRequestingRepository.getChapters","location":"new-player/net.newpipe.newplayer.repository/-eager-requesting-repository/get-chapters.html","searchKeys":["getChapters","open suspend override fun getChapters(item: String): List<Chapter>","net.newpipe.newplayer.repository.EagerRequestingRepository.getChapters"]},{"name":"open suspend override fun getChapters(item: String): List<Chapter>","description":"net.newpipe.newplayer.repository.MultiRepository.getChapters","location":"new-player/net.newpipe.newplayer.repository/-multi-repository/get-chapters.html","searchKeys":["getChapters","open suspend override fun getChapters(item: String): List<Chapter>","net.newpipe.newplayer.repository.MultiRepository.getChapters"]},{"name":"open suspend override fun getChapters(item: String): List<Chapter>","description":"net.newpipe.newplayer.repository.PlaceHolderRepository.getChapters","location":"new-player/net.newpipe.newplayer.repository/-place-holder-repository/get-chapters.html","searchKeys":["getChapters","open suspend override fun getChapters(item: String): List<Chapter>","net.newpipe.newplayer.repository.PlaceHolderRepository.getChapters"]},{"name":"open suspend override fun getMetaInfo(item: String): MediaMetadata","description":"net.newpipe.newplayer.repository.CachingRepository.getMetaInfo","location":"new-player/net.newpipe.newplayer.repository/-caching-repository/get-meta-info.html","searchKeys":["getMetaInfo","open suspend override fun getMetaInfo(item: String): MediaMetadata","net.newpipe.newplayer.repository.CachingRepository.getMetaInfo"]},{"name":"open suspend override fun getMetaInfo(item: String): MediaMetadata","description":"net.newpipe.newplayer.repository.DelayTestRepository.getMetaInfo","location":"new-player/net.newpipe.newplayer.repository/-delay-test-repository/get-meta-info.html","searchKeys":["getMetaInfo","open suspend override fun getMetaInfo(item: String): MediaMetadata","net.newpipe.newplayer.repository.DelayTestRepository.getMetaInfo"]},{"name":"open suspend override fun getMetaInfo(item: String): MediaMetadata","description":"net.newpipe.newplayer.repository.EagerRequestingRepository.getMetaInfo","location":"new-player/net.newpipe.newplayer.repository/-eager-requesting-repository/get-meta-info.html","searchKeys":["getMetaInfo","open suspend override fun getMetaInfo(item: String): MediaMetadata","net.newpipe.newplayer.repository.EagerRequestingRepository.getMetaInfo"]},{"name":"open suspend override fun getMetaInfo(item: String): MediaMetadata","description":"net.newpipe.newplayer.repository.MultiRepository.getMetaInfo","location":"new-player/net.newpipe.newplayer.repository/-multi-repository/get-meta-info.html","searchKeys":["getMetaInfo","open suspend override fun getMetaInfo(item: String): MediaMetadata","net.newpipe.newplayer.repository.MultiRepository.getMetaInfo"]},{"name":"open suspend override fun getMetaInfo(item: String): MediaMetadata","description":"net.newpipe.newplayer.repository.PlaceHolderRepository.getMetaInfo","location":"new-player/net.newpipe.newplayer.repository/-place-holder-repository/get-meta-info.html","searchKeys":["getMetaInfo","open suspend override fun getMetaInfo(item: String): MediaMetadata","net.newpipe.newplayer.repository.PlaceHolderRepository.getMetaInfo"]},{"name":"open suspend override fun getPreviewThumbnail(item: String, timestampInMs: Long): Bitmap?","description":"net.newpipe.newplayer.repository.CachingRepository.getPreviewThumbnail","location":"new-player/net.newpipe.newplayer.repository/-caching-repository/get-preview-thumbnail.html","searchKeys":["getPreviewThumbnail","open suspend override fun getPreviewThumbnail(item: String, timestampInMs: Long): Bitmap?","net.newpipe.newplayer.repository.CachingRepository.getPreviewThumbnail"]},{"name":"open suspend override fun getPreviewThumbnail(item: String, timestampInMs: Long): Bitmap?","description":"net.newpipe.newplayer.repository.DelayTestRepository.getPreviewThumbnail","location":"new-player/net.newpipe.newplayer.repository/-delay-test-repository/get-preview-thumbnail.html","searchKeys":["getPreviewThumbnail","open suspend override fun getPreviewThumbnail(item: String, timestampInMs: Long): Bitmap?","net.newpipe.newplayer.repository.DelayTestRepository.getPreviewThumbnail"]},{"name":"open suspend override fun getPreviewThumbnail(item: String, timestampInMs: Long): Bitmap?","description":"net.newpipe.newplayer.repository.EagerRequestingRepository.getPreviewThumbnail","location":"new-player/net.newpipe.newplayer.repository/-eager-requesting-repository/get-preview-thumbnail.html","searchKeys":["getPreviewThumbnail","open suspend override fun getPreviewThumbnail(item: String, timestampInMs: Long): Bitmap?","net.newpipe.newplayer.repository.EagerRequestingRepository.getPreviewThumbnail"]},{"name":"open suspend override fun getPreviewThumbnail(item: String, timestampInMs: Long): Bitmap?","description":"net.newpipe.newplayer.repository.MultiRepository.getPreviewThumbnail","location":"new-player/net.newpipe.newplayer.repository/-multi-repository/get-preview-thumbnail.html","searchKeys":["getPreviewThumbnail","open suspend override fun getPreviewThumbnail(item: String, timestampInMs: Long): Bitmap?","net.newpipe.newplayer.repository.MultiRepository.getPreviewThumbnail"]},{"name":"open suspend override fun getPreviewThumbnail(item: String, timestampInMs: Long): Nothing?","description":"net.newpipe.newplayer.repository.PlaceHolderRepository.getPreviewThumbnail","location":"new-player/net.newpipe.newplayer.repository/-place-holder-repository/get-preview-thumbnail.html","searchKeys":["getPreviewThumbnail","open suspend override fun getPreviewThumbnail(item: String, timestampInMs: Long): Nothing?","net.newpipe.newplayer.repository.PlaceHolderRepository.getPreviewThumbnail"]},{"name":"open suspend override fun getPreviewThumbnailsInfo(item: String): MediaRepository.PreviewThumbnailsInfo","description":"net.newpipe.newplayer.repository.CachingRepository.getPreviewThumbnailsInfo","location":"new-player/net.newpipe.newplayer.repository/-caching-repository/get-preview-thumbnails-info.html","searchKeys":["getPreviewThumbnailsInfo","open suspend override fun getPreviewThumbnailsInfo(item: String): MediaRepository.PreviewThumbnailsInfo","net.newpipe.newplayer.repository.CachingRepository.getPreviewThumbnailsInfo"]},{"name":"open suspend override fun getPreviewThumbnailsInfo(item: String): MediaRepository.PreviewThumbnailsInfo","description":"net.newpipe.newplayer.repository.DelayTestRepository.getPreviewThumbnailsInfo","location":"new-player/net.newpipe.newplayer.repository/-delay-test-repository/get-preview-thumbnails-info.html","searchKeys":["getPreviewThumbnailsInfo","open suspend override fun getPreviewThumbnailsInfo(item: String): MediaRepository.PreviewThumbnailsInfo","net.newpipe.newplayer.repository.DelayTestRepository.getPreviewThumbnailsInfo"]},{"name":"open suspend override fun getPreviewThumbnailsInfo(item: String): MediaRepository.PreviewThumbnailsInfo","description":"net.newpipe.newplayer.repository.EagerRequestingRepository.getPreviewThumbnailsInfo","location":"new-player/net.newpipe.newplayer.repository/-eager-requesting-repository/get-preview-thumbnails-info.html","searchKeys":["getPreviewThumbnailsInfo","open suspend override fun getPreviewThumbnailsInfo(item: String): MediaRepository.PreviewThumbnailsInfo","net.newpipe.newplayer.repository.EagerRequestingRepository.getPreviewThumbnailsInfo"]},{"name":"open suspend override fun getPreviewThumbnailsInfo(item: String): MediaRepository.PreviewThumbnailsInfo","description":"net.newpipe.newplayer.repository.MultiRepository.getPreviewThumbnailsInfo","location":"new-player/net.newpipe.newplayer.repository/-multi-repository/get-preview-thumbnails-info.html","searchKeys":["getPreviewThumbnailsInfo","open suspend override fun getPreviewThumbnailsInfo(item: String): MediaRepository.PreviewThumbnailsInfo","net.newpipe.newplayer.repository.MultiRepository.getPreviewThumbnailsInfo"]},{"name":"open suspend override fun getPreviewThumbnailsInfo(item: String): MediaRepository.PreviewThumbnailsInfo","description":"net.newpipe.newplayer.repository.PlaceHolderRepository.getPreviewThumbnailsInfo","location":"new-player/net.newpipe.newplayer.repository/-place-holder-repository/get-preview-thumbnails-info.html","searchKeys":["getPreviewThumbnailsInfo","open suspend override fun getPreviewThumbnailsInfo(item: String): MediaRepository.PreviewThumbnailsInfo","net.newpipe.newplayer.repository.PlaceHolderRepository.getPreviewThumbnailsInfo"]},{"name":"open suspend override fun getStreams(item: String): List<Stream>","description":"net.newpipe.newplayer.repository.CachingRepository.getStreams","location":"new-player/net.newpipe.newplayer.repository/-caching-repository/get-streams.html","searchKeys":["getStreams","open suspend override fun getStreams(item: String): List<Stream>","net.newpipe.newplayer.repository.CachingRepository.getStreams"]},{"name":"open suspend override fun getStreams(item: String): List<Stream>","description":"net.newpipe.newplayer.repository.DelayTestRepository.getStreams","location":"new-player/net.newpipe.newplayer.repository/-delay-test-repository/get-streams.html","searchKeys":["getStreams","open suspend override fun getStreams(item: String): List<Stream>","net.newpipe.newplayer.repository.DelayTestRepository.getStreams"]},{"name":"open suspend override fun getStreams(item: String): List<Stream>","description":"net.newpipe.newplayer.repository.EagerRequestingRepository.getStreams","location":"new-player/net.newpipe.newplayer.repository/-eager-requesting-repository/get-streams.html","searchKeys":["getStreams","open suspend override fun getStreams(item: String): List<Stream>","net.newpipe.newplayer.repository.EagerRequestingRepository.getStreams"]},{"name":"open suspend override fun getStreams(item: String): List<Stream>","description":"net.newpipe.newplayer.repository.MultiRepository.getStreams","location":"new-player/net.newpipe.newplayer.repository/-multi-repository/get-streams.html","searchKeys":["getStreams","open suspend override fun getStreams(item: String): List<Stream>","net.newpipe.newplayer.repository.MultiRepository.getStreams"]},{"name":"open suspend override fun getStreams(item: String): List<Stream>","description":"net.newpipe.newplayer.repository.PlaceHolderRepository.getStreams","location":"new-player/net.newpipe.newplayer.repository/-place-holder-repository/get-streams.html","searchKeys":["getStreams","open suspend override fun getStreams(item: String): List<Stream>","net.newpipe.newplayer.repository.PlaceHolderRepository.getStreams"]},{"name":"open suspend override fun getSubtitles(item: String): List<Subtitle>","description":"net.newpipe.newplayer.repository.CachingRepository.getSubtitles","location":"new-player/net.newpipe.newplayer.repository/-caching-repository/get-subtitles.html","searchKeys":["getSubtitles","open suspend override fun getSubtitles(item: String): List<Subtitle>","net.newpipe.newplayer.repository.CachingRepository.getSubtitles"]},{"name":"open suspend override fun getSubtitles(item: String): List<Subtitle>","description":"net.newpipe.newplayer.repository.DelayTestRepository.getSubtitles","location":"new-player/net.newpipe.newplayer.repository/-delay-test-repository/get-subtitles.html","searchKeys":["getSubtitles","open suspend override fun getSubtitles(item: String): List<Subtitle>","net.newpipe.newplayer.repository.DelayTestRepository.getSubtitles"]},{"name":"open suspend override fun getSubtitles(item: String): List<Subtitle>","description":"net.newpipe.newplayer.repository.EagerRequestingRepository.getSubtitles","location":"new-player/net.newpipe.newplayer.repository/-eager-requesting-repository/get-subtitles.html","searchKeys":["getSubtitles","open suspend override fun getSubtitles(item: String): List<Subtitle>","net.newpipe.newplayer.repository.EagerRequestingRepository.getSubtitles"]},{"name":"open suspend override fun getSubtitles(item: String): List<Subtitle>","description":"net.newpipe.newplayer.repository.MultiRepository.getSubtitles","location":"new-player/net.newpipe.newplayer.repository/-multi-repository/get-subtitles.html","searchKeys":["getSubtitles","open suspend override fun getSubtitles(item: String): List<Subtitle>","net.newpipe.newplayer.repository.MultiRepository.getSubtitles"]},{"name":"open suspend override fun getSubtitles(item: String): List<Subtitle>","description":"net.newpipe.newplayer.repository.PlaceHolderRepository.getSubtitles","location":"new-player/net.newpipe.newplayer.repository/-place-holder-repository/get-subtitles.html","searchKeys":["getSubtitles","open suspend override fun getSubtitles(item: String): List<Subtitle>","net.newpipe.newplayer.repository.PlaceHolderRepository.getSubtitles"]},{"name":"open suspend override fun getTimestampLink(item: String, timestampInSeconds: Long): String","description":"net.newpipe.newplayer.repository.CachingRepository.getTimestampLink","location":"new-player/net.newpipe.newplayer.repository/-caching-repository/get-timestamp-link.html","searchKeys":["getTimestampLink","open suspend override fun getTimestampLink(item: String, timestampInSeconds: Long): String","net.newpipe.newplayer.repository.CachingRepository.getTimestampLink"]},{"name":"open suspend override fun getTimestampLink(item: String, timestampInSeconds: Long): String","description":"net.newpipe.newplayer.repository.DelayTestRepository.getTimestampLink","location":"new-player/net.newpipe.newplayer.repository/-delay-test-repository/get-timestamp-link.html","searchKeys":["getTimestampLink","open suspend override fun getTimestampLink(item: String, timestampInSeconds: Long): String","net.newpipe.newplayer.repository.DelayTestRepository.getTimestampLink"]},{"name":"open suspend override fun getTimestampLink(item: String, timestampInSeconds: Long): String","description":"net.newpipe.newplayer.repository.EagerRequestingRepository.getTimestampLink","location":"new-player/net.newpipe.newplayer.repository/-eager-requesting-repository/get-timestamp-link.html","searchKeys":["getTimestampLink","open suspend override fun getTimestampLink(item: String, timestampInSeconds: Long): String","net.newpipe.newplayer.repository.EagerRequestingRepository.getTimestampLink"]},{"name":"open suspend override fun getTimestampLink(item: String, timestampInSeconds: Long): String","description":"net.newpipe.newplayer.repository.MultiRepository.getTimestampLink","location":"new-player/net.newpipe.newplayer.repository/-multi-repository/get-timestamp-link.html","searchKeys":["getTimestampLink","open suspend override fun getTimestampLink(item: String, timestampInSeconds: Long): String","net.newpipe.newplayer.repository.MultiRepository.getTimestampLink"]},{"name":"open suspend override fun getTimestampLink(item: String, timestampInSeconds: Long): String","description":"net.newpipe.newplayer.repository.PlaceHolderRepository.getTimestampLink","location":"new-player/net.newpipe.newplayer.repository/-place-holder-repository/get-timestamp-link.html","searchKeys":["getTimestampLink","open suspend override fun getTimestampLink(item: String, timestampInSeconds: Long): String","net.newpipe.newplayer.repository.PlaceHolderRepository.getTimestampLink"]},{"name":"val DEFAULT: NewPlayerUIState","description":"net.newpipe.newplayer.uiModel.NewPlayerUIState.Companion.DEFAULT","location":"new-player/net.newpipe.newplayer.uiModel/-new-player-u-i-state/-companion/-d-e-f-a-u-l-t.html","searchKeys":["DEFAULT","val DEFAULT: NewPlayerUIState","net.newpipe.newplayer.uiModel.NewPlayerUIState.Companion.DEFAULT"]},{"name":"val DUMMY: EmbeddedUiConfig","description":"net.newpipe.newplayer.uiModel.EmbeddedUiConfig.Companion.DUMMY","location":"new-player/net.newpipe.newplayer.uiModel/-embedded-ui-config/-companion/-d-u-m-m-y.html","searchKeys":["DUMMY","val DUMMY: EmbeddedUiConfig","net.newpipe.newplayer.uiModel.EmbeddedUiConfig.Companion.DUMMY"]},{"name":"val DUMMY: NewPlayerUIState","description":"net.newpipe.newplayer.uiModel.NewPlayerUIState.Companion.DUMMY","location":"new-player/net.newpipe.newplayer.uiModel/-new-player-u-i-state/-companion/-d-u-m-m-y.html","searchKeys":["DUMMY","val DUMMY: NewPlayerUIState","net.newpipe.newplayer.uiModel.NewPlayerUIState.Companion.DUMMY"]},{"name":"val INDICATOR_BACKGROUND_COLOR: Color","description":"net.newpipe.newplayer.ui.videoplayer.INDICATOR_BACKGROUND_COLOR","location":"new-player/net.newpipe.newplayer.ui.videoplayer/-i-n-d-i-c-a-t-o-r_-b-a-c-k-g-r-o-u-n-d_-c-o-l-o-r.html","searchKeys":["INDICATOR_BACKGROUND_COLOR","val INDICATOR_BACKGROUND_COLOR: Color","net.newpipe.newplayer.ui.videoplayer.INDICATOR_BACKGROUND_COLOR"]},{"name":"val Typography: Typography","description":"net.newpipe.newplayer.ui.theme.Typography","location":"new-player/net.newpipe.newplayer.ui.theme/-typography.html","searchKeys":["Typography","val Typography: Typography","net.newpipe.newplayer.ui.theme.Typography"]},{"name":"val VIDEOPLAYER_UI_STATE: String","description":"net.newpipe.newplayer.uiModel.VIDEOPLAYER_UI_STATE","location":"new-player/net.newpipe.newplayer.uiModel/-v-i-d-e-o-p-l-a-y-e-r_-u-i_-s-t-a-t-e.html","searchKeys":["VIDEOPLAYER_UI_STATE","val VIDEOPLAYER_UI_STATE: String","net.newpipe.newplayer.uiModel.VIDEOPLAYER_UI_STATE"]},{"name":"val VideoPlayerColorScheme: ColorScheme","description":"net.newpipe.newplayer.ui.theme.VideoPlayerColorScheme","location":"new-player/net.newpipe.newplayer.ui.theme/-video-player-color-scheme.html","searchKeys":["VideoPlayerColorScheme","val VideoPlayerColorScheme: ColorScheme","net.newpipe.newplayer.ui.theme.VideoPlayerColorScheme"]},{"name":"val action: () -> Unit","description":"net.newpipe.newplayer.logic.ActionResponse.action","location":"new-player/net.newpipe.newplayer.logic/-action-response/action.html","searchKeys":["action","val action: () -> Unit","net.newpipe.newplayer.logic.ActionResponse.action"]},{"name":"val actualRepo: MediaRepository","description":"net.newpipe.newplayer.repository.DelayTestRepository.actualRepo","location":"new-player/net.newpipe.newplayer.repository/-delay-test-repository/actual-repo.html","searchKeys":["actualRepo","val actualRepo: MediaRepository","net.newpipe.newplayer.repository.DelayTestRepository.actualRepo"]},{"name":"val actualRepositories: List<MultiRepoEntry>","description":"net.newpipe.newplayer.repository.MultiRepository.actualRepositories","location":"new-player/net.newpipe.newplayer.repository/-multi-repository/actual-repositories.html","searchKeys":["actualRepositories","val actualRepositories: List<MultiRepoEntry>","net.newpipe.newplayer.repository.MultiRepository.actualRepositories"]},{"name":"val actualRepository: MediaRepository","description":"net.newpipe.newplayer.repository.CachingRepository.actualRepository","location":"new-player/net.newpipe.newplayer.repository/-caching-repository/actual-repository.html","searchKeys":["actualRepository","val actualRepository: MediaRepository","net.newpipe.newplayer.repository.CachingRepository.actualRepository"]},{"name":"val app: Application","description":"net.newpipe.newplayer.NewPlayerImpl.app","location":"new-player/net.newpipe.newplayer/-new-player-impl/app.html","searchKeys":["app","val app: Application","net.newpipe.newplayer.NewPlayerImpl.app"]},{"name":"val audioStreamTrack: List<AudioStreamTrack>","description":"net.newpipe.newplayer.data.Stream.audioStreamTrack","location":"new-player/net.newpipe.newplayer.data/-stream/audio-stream-track.html","searchKeys":["audioStreamTrack","val audioStreamTrack: List<AudioStreamTrack>","net.newpipe.newplayer.data.Stream.audioStreamTrack"]},{"name":"val bitrate: Int","description":"net.newpipe.newplayer.data.AudioStreamTrack.bitrate","location":"new-player/net.newpipe.newplayer.data/-audio-stream-track/bitrate.html","searchKeys":["bitrate","val bitrate: Int","net.newpipe.newplayer.data.AudioStreamTrack.bitrate"]},{"name":"val brainSlugScope: CoroutineScope","description":"net.newpipe.newplayer.ActivityBrainSlug.brainSlugScope","location":"new-player/net.newpipe.newplayer/-activity-brain-slug/brain-slug-scope.html","searchKeys":["brainSlugScope","val brainSlugScope: CoroutineScope","net.newpipe.newplayer.ActivityBrainSlug.brainSlugScope"]},{"name":"val brightness: Float","description":"net.newpipe.newplayer.uiModel.EmbeddedUiConfig.brightness","location":"new-player/net.newpipe.newplayer.uiModel/-embedded-ui-config/brightness.html","searchKeys":["brightness","val brightness: Float","net.newpipe.newplayer.uiModel.EmbeddedUiConfig.brightness"]},{"name":"val brightness: Float?","description":"net.newpipe.newplayer.uiModel.NewPlayerUIState.brightness","location":"new-player/net.newpipe.newplayer.uiModel/-new-player-u-i-state/brightness.html","searchKeys":["brightness","val brightness: Float?","net.newpipe.newplayer.uiModel.NewPlayerUIState.brightness"]},{"name":"val bufferedPercentage: Float","description":"net.newpipe.newplayer.uiModel.NewPlayerUIState.bufferedPercentage","location":"new-player/net.newpipe.newplayer.uiModel/-new-player-u-i-state/buffered-percentage.html","searchKeys":["bufferedPercentage","val bufferedPercentage: Float","net.newpipe.newplayer.uiModel.NewPlayerUIState.bufferedPercentage"]},{"name":"val cachingRepository: MediaRepository","description":"net.newpipe.newplayer.repository.EagerRequestingRepository.cachingRepository","location":"new-player/net.newpipe.newplayer.repository/-eager-requesting-repository/caching-repository.html","searchKeys":["cachingRepository","val cachingRepository: MediaRepository","net.newpipe.newplayer.repository.EagerRequestingRepository.cachingRepository"]},{"name":"val canHandleTimestampedLinks: Boolean","description":"net.newpipe.newplayer.repository.MediaRepository.RepoMetaInfo.canHandleTimestampedLinks","location":"new-player/net.newpipe.newplayer.repository/-media-repository/-repo-meta-info/can-handle-timestamped-links.html","searchKeys":["canHandleTimestampedLinks","val canHandleTimestampedLinks: Boolean","net.newpipe.newplayer.repository.MediaRepository.RepoMetaInfo.canHandleTimestampedLinks"]},{"name":"val chapterStartInMs: Long","description":"net.newpipe.newplayer.data.Chapter.chapterStartInMs","location":"new-player/net.newpipe.newplayer.data/-chapter/chapter-start-in-ms.html","searchKeys":["chapterStartInMs","val chapterStartInMs: Long","net.newpipe.newplayer.data.Chapter.chapterStartInMs"]},{"name":"val chapterTitle: String?","description":"net.newpipe.newplayer.data.Chapter.chapterTitle","location":"new-player/net.newpipe.newplayer.data/-chapter/chapter-title.html","searchKeys":["chapterTitle","val chapterTitle: String?","net.newpipe.newplayer.data.Chapter.chapterTitle"]},{"name":"val chapters: List<Chapter>","description":"net.newpipe.newplayer.uiModel.NewPlayerUIState.chapters","location":"new-player/net.newpipe.newplayer.uiModel/-new-player-u-i-state/chapters.html","searchKeys":["chapters","val chapters: List<Chapter>","net.newpipe.newplayer.uiModel.NewPlayerUIState.chapters"]},{"name":"val contentFitMode: ContentScale","description":"net.newpipe.newplayer.uiModel.NewPlayerUIState.contentFitMode","location":"new-player/net.newpipe.newplayer.uiModel/-new-player-u-i-state/content-fit-mode.html","searchKeys":["contentFitMode","val contentFitMode: ContentScale","net.newpipe.newplayer.uiModel.NewPlayerUIState.contentFitMode"]},{"name":"val contentRatio: Float","description":"net.newpipe.newplayer.uiModel.NewPlayerUIState.contentRatio","location":"new-player/net.newpipe.newplayer.uiModel/-new-player-u-i-state/content-ratio.html","searchKeys":["contentRatio","val contentRatio: Float","net.newpipe.newplayer.uiModel.NewPlayerUIState.contentRatio"]},{"name":"val count: Long","description":"net.newpipe.newplayer.repository.MediaRepository.PreviewThumbnailsInfo.count","location":"new-player/net.newpipe.newplayer.repository/-media-repository/-preview-thumbnails-info/count.html","searchKeys":["count","val count: Long","net.newpipe.newplayer.repository.MediaRepository.PreviewThumbnailsInfo.count"]},{"name":"val currentPlaylistItemIndex: Int","description":"net.newpipe.newplayer.uiModel.NewPlayerUIState.currentPlaylistItemIndex","location":"new-player/net.newpipe.newplayer.uiModel/-new-player-u-i-state/current-playlist-item-index.html","searchKeys":["currentPlaylistItemIndex","val currentPlaylistItemIndex: Int","net.newpipe.newplayer.uiModel.NewPlayerUIState.currentPlaylistItemIndex"]},{"name":"val currentSeekPreviewThumbnail: ImageBitmap?","description":"net.newpipe.newplayer.uiModel.NewPlayerUIState.currentSeekPreviewThumbnail","location":"new-player/net.newpipe.newplayer.uiModel/-new-player-u-i-state/current-seek-preview-thumbnail.html","searchKeys":["currentSeekPreviewThumbnail","val currentSeekPreviewThumbnail: ImageBitmap?","net.newpipe.newplayer.uiModel.NewPlayerUIState.currentSeekPreviewThumbnail"]},{"name":"val currentlyAvailableTracks: List<StreamTrack>","description":"net.newpipe.newplayer.uiModel.NewPlayerUIState.currentlyAvailableTracks","location":"new-player/net.newpipe.newplayer.uiModel/-new-player-u-i-state/currently-available-tracks.html","searchKeys":["currentlyAvailableTracks","val currentlyAvailableTracks: List<StreamTrack>","net.newpipe.newplayer.uiModel.NewPlayerUIState.currentlyAvailableTracks"]},{"name":"val currentlyPlaying: MediaItem?","description":"net.newpipe.newplayer.uiModel.NewPlayerUIState.currentlyPlaying","location":"new-player/net.newpipe.newplayer.uiModel/-new-player-u-i-state/currently-playing.html","searchKeys":["currentlyPlaying","val currentlyPlaying: MediaItem?","net.newpipe.newplayer.uiModel.NewPlayerUIState.currentlyPlaying"]},{"name":"val currentlyPlayingTracks: List<StreamTrack>","description":"net.newpipe.newplayer.uiModel.NewPlayerUIState.currentlyPlayingTracks","location":"new-player/net.newpipe.newplayer.uiModel/-new-player-u-i-state/currently-playing-tracks.html","searchKeys":["currentlyPlayingTracks","val currentlyPlayingTracks: List<StreamTrack>","net.newpipe.newplayer.uiModel.NewPlayerUIState.currentlyPlayingTracks"]},{"name":"val distanceInMS: Long","description":"net.newpipe.newplayer.repository.MediaRepository.PreviewThumbnailsInfo.distanceInMS","location":"new-player/net.newpipe.newplayer.repository/-media-repository/-preview-thumbnails-info/distance-in-m-s.html","searchKeys":["distanceInMS","val distanceInMS: Long","net.newpipe.newplayer.repository.MediaRepository.PreviewThumbnailsInfo.distanceInMS"]},{"name":"val durationInMs: Long","description":"net.newpipe.newplayer.uiModel.NewPlayerUIState.durationInMs","location":"new-player/net.newpipe.newplayer.uiModel/-new-player-u-i-state/duration-in-ms.html","searchKeys":["durationInMs","val durationInMs: Long","net.newpipe.newplayer.uiModel.NewPlayerUIState.durationInMs"]},{"name":"val embeddedUiConfig: EmbeddedUiConfig?","description":"net.newpipe.newplayer.uiModel.NewPlayerUIState.embeddedUiConfig","location":"new-player/net.newpipe.newplayer.uiModel/-new-player-u-i-state/embedded-ui-config.html","searchKeys":["embeddedUiConfig","val embeddedUiConfig: EmbeddedUiConfig?","net.newpipe.newplayer.uiModel.NewPlayerUIState.embeddedUiConfig"]},{"name":"val embeddedUiRatio: Float","description":"net.newpipe.newplayer.uiModel.NewPlayerUIState.embeddedUiRatio","location":"new-player/net.newpipe.newplayer.uiModel/-new-player-u-i-state/embedded-ui-ratio.html","searchKeys":["embeddedUiRatio","val embeddedUiRatio: Float","net.newpipe.newplayer.uiModel.NewPlayerUIState.embeddedUiRatio"]},{"name":"val enteringPip: Boolean","description":"net.newpipe.newplayer.uiModel.NewPlayerUIState.enteringPip","location":"new-player/net.newpipe.newplayer.uiModel/-new-player-u-i-state/entering-pip.html","searchKeys":["enteringPip","val enteringPip: Boolean","net.newpipe.newplayer.uiModel.NewPlayerUIState.enteringPip"]},{"name":"val entries: EnumEntries<ContentScale>","description":"net.newpipe.newplayer.ui.ContentScale.entries","location":"new-player/net.newpipe.newplayer.ui/-content-scale/entries.html","searchKeys":["entries","val entries: EnumEntries<ContentScale>","net.newpipe.newplayer.ui.ContentScale.entries"]},{"name":"val entries: EnumEntries<PlayMode>","description":"net.newpipe.newplayer.data.PlayMode.entries","location":"new-player/net.newpipe.newplayer.data/-play-mode/entries.html","searchKeys":["entries","val entries: EnumEntries<PlayMode>","net.newpipe.newplayer.data.PlayMode.entries"]},{"name":"val entries: EnumEntries<RepeatMode>","description":"net.newpipe.newplayer.data.RepeatMode.entries","location":"new-player/net.newpipe.newplayer.data/-repeat-mode/entries.html","searchKeys":["entries","val entries: EnumEntries<RepeatMode>","net.newpipe.newplayer.data.RepeatMode.entries"]},{"name":"val entries: EnumEntries<UIModeState>","description":"net.newpipe.newplayer.uiModel.UIModeState.entries","location":"new-player/net.newpipe.newplayer.uiModel/-u-i-mode-state/entries.html","searchKeys":["entries","val entries: EnumEntries<UIModeState>","net.newpipe.newplayer.uiModel.UIModeState.entries"]},{"name":"val fastSeekSeconds: Int","description":"net.newpipe.newplayer.uiModel.NewPlayerUIState.fastSeekSeconds","location":"new-player/net.newpipe.newplayer.uiModel/-new-player-u-i-state/fast-seek-seconds.html","searchKeys":["fastSeekSeconds","val fastSeekSeconds: Int","net.newpipe.newplayer.uiModel.NewPlayerUIState.fastSeekSeconds"]},{"name":"val fitScreenRotation: Boolean","description":"net.newpipe.newplayer.uiModel.UIModeState.fitScreenRotation","location":"new-player/net.newpipe.newplayer.uiModel/-u-i-mode-state/fit-screen-rotation.html","searchKeys":["fitScreenRotation","val fitScreenRotation: Boolean","net.newpipe.newplayer.uiModel.UIModeState.fitScreenRotation"]},{"name":"val frameRate: Int","description":"net.newpipe.newplayer.data.VideoStreamTrack.frameRate","location":"new-player/net.newpipe.newplayer.data/-video-stream-track/frame-rate.html","searchKeys":["frameRate","val frameRate: Int","net.newpipe.newplayer.data.VideoStreamTrack.frameRate"]},{"name":"val fullscreen: Boolean","description":"net.newpipe.newplayer.uiModel.UIModeState.fullscreen","location":"new-player/net.newpipe.newplayer.uiModel/-u-i-mode-state/fullscreen.html","searchKeys":["fullscreen","val fullscreen: Boolean","net.newpipe.newplayer.uiModel.UIModeState.fullscreen"]},{"name":"val hasAudioTracks: Boolean","description":"net.newpipe.newplayer.data.Stream.hasAudioTracks","location":"new-player/net.newpipe.newplayer.data/-stream/has-audio-tracks.html","searchKeys":["hasAudioTracks","val hasAudioTracks: Boolean","net.newpipe.newplayer.data.Stream.hasAudioTracks"]},{"name":"val hasVideoTracks: Boolean","description":"net.newpipe.newplayer.data.Stream.hasVideoTracks","location":"new-player/net.newpipe.newplayer.data/-stream/has-video-tracks.html","searchKeys":["hasVideoTracks","val hasVideoTracks: Boolean","net.newpipe.newplayer.data.Stream.hasVideoTracks"]},{"name":"val height: Int","description":"net.newpipe.newplayer.data.VideoStreamTrack.height","location":"new-player/net.newpipe.newplayer.data/-video-stream-track/height.html","searchKeys":["height","val height: Int","net.newpipe.newplayer.data.VideoStreamTrack.height"]},{"name":"val identifier: String","description":"net.newpipe.newplayer.data.Subtitle.identifier","location":"new-player/net.newpipe.newplayer.data/-subtitle/identifier.html","searchKeys":["identifier","val identifier: String","net.newpipe.newplayer.data.Subtitle.identifier"]},{"name":"val inAudioMode: Boolean","description":"net.newpipe.newplayer.uiModel.UIModeState.inAudioMode","location":"new-player/net.newpipe.newplayer.uiModel/-u-i-mode-state/in-audio-mode.html","searchKeys":["inAudioMode","val inAudioMode: Boolean","net.newpipe.newplayer.uiModel.UIModeState.inAudioMode"]},{"name":"val isChapterSelect: Boolean","description":"net.newpipe.newplayer.uiModel.UIModeState.isChapterSelect","location":"new-player/net.newpipe.newplayer.uiModel/-u-i-mode-state/is-chapter-select.html","searchKeys":["isChapterSelect","val isChapterSelect: Boolean","net.newpipe.newplayer.uiModel.UIModeState.isChapterSelect"]},{"name":"val isDashOrHls: Boolean = false","description":"net.newpipe.newplayer.data.Stream.isDashOrHls","location":"new-player/net.newpipe.newplayer.data/-stream/is-dash-or-hls.html","searchKeys":["isDashOrHls","val isDashOrHls: Boolean = false","net.newpipe.newplayer.data.Stream.isDashOrHls"]},{"name":"val isLoading: Boolean","description":"net.newpipe.newplayer.uiModel.NewPlayerUIState.isLoading","location":"new-player/net.newpipe.newplayer.uiModel/-new-player-u-i-state/is-loading.html","searchKeys":["isLoading","val isLoading: Boolean","net.newpipe.newplayer.uiModel.NewPlayerUIState.isLoading"]},{"name":"val isStreamSelect: Boolean","description":"net.newpipe.newplayer.uiModel.UIModeState.isStreamSelect","location":"new-player/net.newpipe.newplayer.uiModel/-u-i-mode-state/is-stream-select.html","searchKeys":["isStreamSelect","val isStreamSelect: Boolean","net.newpipe.newplayer.uiModel.UIModeState.isStreamSelect"]},{"name":"val item: String","description":"net.newpipe.newplayer.data.Stream.item","location":"new-player/net.newpipe.newplayer.data/-stream/item.html","searchKeys":["item","val item: String","net.newpipe.newplayer.data.Stream.item"]},{"name":"val key: String","description":"net.newpipe.newplayer.repository.MultiRepoEntry.key","location":"new-player/net.newpipe.newplayer.repository/-multi-repo-entry/key.html","searchKeys":["key","val key: String","net.newpipe.newplayer.repository.MultiRepoEntry.key"]},{"name":"val language: String? = null","description":"net.newpipe.newplayer.data.AudioStreamTrack.language","location":"new-player/net.newpipe.newplayer.data/-audio-stream-track/language.html","searchKeys":["language","val language: String? = null","net.newpipe.newplayer.data.AudioStreamTrack.language"]},{"name":"val languages: List<String>","description":"net.newpipe.newplayer.data.Stream.languages","location":"new-player/net.newpipe.newplayer.data/-stream/languages.html","searchKeys":["languages","val languages: List<String>","net.newpipe.newplayer.data.Stream.languages"]},{"name":"val mimeType: String? = null","description":"net.newpipe.newplayer.data.Stream.mimeType","location":"new-player/net.newpipe.newplayer.data/-stream/mime-type.html","searchKeys":["mimeType","val mimeType: String? = null","net.newpipe.newplayer.data.Stream.mimeType"]},{"name":"val newItem: String","description":"net.newpipe.newplayer.logic.ReplaceItemResponse.newItem","location":"new-player/net.newpipe.newplayer.logic/-replace-item-response/new-item.html","searchKeys":["newItem","val newItem: String","net.newpipe.newplayer.logic.ReplaceItemResponse.newItem"]},{"name":"val playList: List<MediaItem>","description":"net.newpipe.newplayer.uiModel.NewPlayerUIState.playList","location":"new-player/net.newpipe.newplayer.uiModel/-new-player-u-i-state/play-list.html","searchKeys":["playList","val playList: List<MediaItem>","net.newpipe.newplayer.uiModel.NewPlayerUIState.playList"]},{"name":"val playListDurationInS: Int","description":"net.newpipe.newplayer.uiModel.NewPlayerUIState.playListDurationInS","location":"new-player/net.newpipe.newplayer.uiModel/-new-player-u-i-state/play-list-duration-in-s.html","searchKeys":["playListDurationInS","val playListDurationInS: Int","net.newpipe.newplayer.uiModel.NewPlayerUIState.playListDurationInS"]},{"name":"val playbackPositionInMs: Long","description":"net.newpipe.newplayer.uiModel.NewPlayerUIState.playbackPositionInMs","location":"new-player/net.newpipe.newplayer.uiModel/-new-player-u-i-state/playback-position-in-ms.html","searchKeys":["playbackPositionInMs","val playbackPositionInMs: Long","net.newpipe.newplayer.uiModel.NewPlayerUIState.playbackPositionInMs"]},{"name":"val playbackPositionInPlaylistMs: Long","description":"net.newpipe.newplayer.uiModel.NewPlayerUIState.playbackPositionInPlaylistMs","location":"new-player/net.newpipe.newplayer.uiModel/-new-player-u-i-state/playback-position-in-playlist-ms.html","searchKeys":["playbackPositionInPlaylistMs","val playbackPositionInPlaylistMs: Long","net.newpipe.newplayer.uiModel.NewPlayerUIState.playbackPositionInPlaylistMs"]},{"name":"val playing: Boolean","description":"net.newpipe.newplayer.uiModel.NewPlayerUIState.playing","location":"new-player/net.newpipe.newplayer.uiModel/-new-player-u-i-state/playing.html","searchKeys":["playing","val playing: Boolean","net.newpipe.newplayer.uiModel.NewPlayerUIState.playing"]},{"name":"val pullsDataFromNetwork: Boolean","description":"net.newpipe.newplayer.repository.MediaRepository.RepoMetaInfo.pullsDataFromNetwork","location":"new-player/net.newpipe.newplayer.repository/-media-repository/-repo-meta-info/pulls-data-from-network.html","searchKeys":["pullsDataFromNetwork","val pullsDataFromNetwork: Boolean","net.newpipe.newplayer.repository.MediaRepository.RepoMetaInfo.pullsDataFromNetwork"]},{"name":"val repeatMode: RepeatMode","description":"net.newpipe.newplayer.uiModel.NewPlayerUIState.repeatMode","location":"new-player/net.newpipe.newplayer.uiModel/-new-player-u-i-state/repeat-mode.html","searchKeys":["repeatMode","val repeatMode: RepeatMode","net.newpipe.newplayer.uiModel.NewPlayerUIState.repeatMode"]},{"name":"val repos: HashMap<String, MediaRepository>","description":"net.newpipe.newplayer.repository.MultiRepository.repos","location":"new-player/net.newpipe.newplayer.repository/-multi-repository/repos.html","searchKeys":["repos","val repos: HashMap<String, MediaRepository>","net.newpipe.newplayer.repository.MultiRepository.repos"]},{"name":"val repository: MediaRepository","description":"net.newpipe.newplayer.repository.MultiRepoEntry.repository","location":"new-player/net.newpipe.newplayer.repository/-multi-repo-entry/repository.html","searchKeys":["repository","val repository: MediaRepository","net.newpipe.newplayer.repository.MultiRepoEntry.repository"]},{"name":"val requestDispatcher: CoroutineDispatcher","description":"net.newpipe.newplayer.repository.EagerRequestingRepository.requestDispatcher","location":"new-player/net.newpipe.newplayer.repository/-eager-requesting-repository/request-dispatcher.html","searchKeys":["requestDispatcher","val requestDispatcher: CoroutineDispatcher","net.newpipe.newplayer.repository.EagerRequestingRepository.requestDispatcher"]},{"name":"val requestScope: CoroutineScope","description":"net.newpipe.newplayer.repository.EagerRequestingRepository.requestScope","location":"new-player/net.newpipe.newplayer.repository/-eager-requesting-repository/request-scope.html","searchKeys":["requestScope","val requestScope: CoroutineScope","net.newpipe.newplayer.repository.EagerRequestingRepository.requestScope"]},{"name":"val requiresProgressUpdate: Boolean","description":"net.newpipe.newplayer.uiModel.UIModeState.requiresProgressUpdate","location":"new-player/net.newpipe.newplayer.uiModel/-u-i-mode-state/requires-progress-update.html","searchKeys":["requiresProgressUpdate","val requiresProgressUpdate: Boolean","net.newpipe.newplayer.uiModel.UIModeState.requiresProgressUpdate"]},{"name":"val screenOrientation: Int","description":"net.newpipe.newplayer.uiModel.EmbeddedUiConfig.screenOrientation","location":"new-player/net.newpipe.newplayer.uiModel/-embedded-ui-config/screen-orientation.html","searchKeys":["screenOrientation","val screenOrientation: Int","net.newpipe.newplayer.uiModel.EmbeddedUiConfig.screenOrientation"]},{"name":"val seekPreviewVisible: Boolean","description":"net.newpipe.newplayer.uiModel.NewPlayerUIState.seekPreviewVisible","location":"new-player/net.newpipe.newplayer.uiModel/-new-player-u-i-state/seek-preview-visible.html","searchKeys":["seekPreviewVisible","val seekPreviewVisible: Boolean","net.newpipe.newplayer.uiModel.NewPlayerUIState.seekPreviewVisible"]},{"name":"val seekerPosition: Float","description":"net.newpipe.newplayer.uiModel.NewPlayerUIState.seekerPosition","location":"new-player/net.newpipe.newplayer.uiModel/-new-player-u-i-state/seeker-position.html","searchKeys":["seekerPosition","val seekerPosition: Float","net.newpipe.newplayer.uiModel.NewPlayerUIState.seekerPosition"]},{"name":"val shuffleEnabled: Boolean","description":"net.newpipe.newplayer.uiModel.NewPlayerUIState.shuffleEnabled","location":"new-player/net.newpipe.newplayer.uiModel/-new-player-u-i-state/shuffle-enabled.html","searchKeys":["shuffleEnabled","val shuffleEnabled: Boolean","net.newpipe.newplayer.uiModel.NewPlayerUIState.shuffleEnabled"]},{"name":"val soundVolume: Float","description":"net.newpipe.newplayer.uiModel.NewPlayerUIState.soundVolume","location":"new-player/net.newpipe.newplayer.uiModel/-new-player-u-i-state/sound-volume.html","searchKeys":["soundVolume","val soundVolume: Float","net.newpipe.newplayer.uiModel.NewPlayerUIState.soundVolume"]},{"name":"val stream: Stream","description":"net.newpipe.newplayer.data.SingleSelection.stream","location":"new-player/net.newpipe.newplayer.data/-single-selection/stream.html","searchKeys":["stream","val stream: Stream","net.newpipe.newplayer.data.SingleSelection.stream"]},{"name":"val streamSelection: StreamSelection","description":"net.newpipe.newplayer.logic.ReplaceStreamSelectionResponse.streamSelection","location":"new-player/net.newpipe.newplayer.logic/-replace-stream-selection-response/stream-selection.html","searchKeys":["streamSelection","val streamSelection: StreamSelection","net.newpipe.newplayer.logic.ReplaceStreamSelectionResponse.streamSelection"]},{"name":"val streamTracks: List<StreamTrack>","description":"net.newpipe.newplayer.data.Stream.streamTracks","location":"new-player/net.newpipe.newplayer.data/-stream/stream-tracks.html","searchKeys":["streamTracks","val streamTracks: List<StreamTrack>","net.newpipe.newplayer.data.Stream.streamTracks"]},{"name":"val streamUri: Uri","description":"net.newpipe.newplayer.data.Stream.streamUri","location":"new-player/net.newpipe.newplayer.data/-stream/stream-uri.html","searchKeys":["streamUri","val streamUri: Uri","net.newpipe.newplayer.data.Stream.streamUri"]},{"name":"val streams: List<Stream>","description":"net.newpipe.newplayer.data.MultiSelection.streams","location":"new-player/net.newpipe.newplayer.data/-multi-selection/streams.html","searchKeys":["streams","val streams: List<Stream>","net.newpipe.newplayer.data.MultiSelection.streams"]},{"name":"val systemBarInLightMode: Boolean","description":"net.newpipe.newplayer.uiModel.EmbeddedUiConfig.systemBarInLightMode","location":"new-player/net.newpipe.newplayer.uiModel/-embedded-ui-config/system-bar-in-light-mode.html","searchKeys":["systemBarInLightMode","val systemBarInLightMode: Boolean","net.newpipe.newplayer.uiModel.EmbeddedUiConfig.systemBarInLightMode"]},{"name":"val systemInsetsVisible: Boolean","description":"net.newpipe.newplayer.uiModel.UIModeState.systemInsetsVisible","location":"new-player/net.newpipe.newplayer.uiModel/-u-i-mode-state/system-insets-visible.html","searchKeys":["systemInsetsVisible","val systemInsetsVisible: Boolean","net.newpipe.newplayer.uiModel.UIModeState.systemInsetsVisible"]},{"name":"val thumbnail: Uri?","description":"net.newpipe.newplayer.data.Chapter.thumbnail","location":"new-player/net.newpipe.newplayer.data/-chapter/thumbnail.html","searchKeys":["thumbnail","val thumbnail: Uri?","net.newpipe.newplayer.data.Chapter.thumbnail"]},{"name":"val uiMode: UIModeState","description":"net.newpipe.newplayer.uiModel.NewPlayerUIState.uiMode","location":"new-player/net.newpipe.newplayer.uiModel/-new-player-u-i-state/ui-mode.html","searchKeys":["uiMode","val uiMode: UIModeState","net.newpipe.newplayer.uiModel.NewPlayerUIState.uiMode"]},{"name":"val uri: Uri","description":"net.newpipe.newplayer.data.Subtitle.uri","location":"new-player/net.newpipe.newplayer.data/-subtitle/uri.html","searchKeys":["uri","val uri: Uri","net.newpipe.newplayer.data.Subtitle.uri"]},{"name":"val videoControllerUiVisible: Boolean","description":"net.newpipe.newplayer.uiModel.UIModeState.videoControllerUiVisible","location":"new-player/net.newpipe.newplayer.uiModel/-u-i-mode-state/video-controller-ui-visible.html","searchKeys":["videoControllerUiVisible","val videoControllerUiVisible: Boolean","net.newpipe.newplayer.uiModel.UIModeState.videoControllerUiVisible"]},{"name":"val videoStreamTracks: List<VideoStreamTrack>","description":"net.newpipe.newplayer.data.Stream.videoStreamTracks","location":"new-player/net.newpipe.newplayer.data/-stream/video-stream-tracks.html","searchKeys":["videoStreamTracks","val videoStreamTracks: List<VideoStreamTrack>","net.newpipe.newplayer.data.Stream.videoStreamTracks"]},{"name":"val video_player_background: Color","description":"net.newpipe.newplayer.ui.theme.video_player_background","location":"new-player/net.newpipe.newplayer.ui.theme/video_player_background.html","searchKeys":["video_player_background","val video_player_background: Color","net.newpipe.newplayer.ui.theme.video_player_background"]},{"name":"val video_player_error: Color","description":"net.newpipe.newplayer.ui.theme.video_player_error","location":"new-player/net.newpipe.newplayer.ui.theme/video_player_error.html","searchKeys":["video_player_error","val video_player_error: Color","net.newpipe.newplayer.ui.theme.video_player_error"]},{"name":"val video_player_errorContainer: Color","description":"net.newpipe.newplayer.ui.theme.video_player_errorContainer","location":"new-player/net.newpipe.newplayer.ui.theme/video_player_error-container.html","searchKeys":["video_player_errorContainer","val video_player_errorContainer: Color","net.newpipe.newplayer.ui.theme.video_player_errorContainer"]},{"name":"val video_player_inverseOnSurface: Color","description":"net.newpipe.newplayer.ui.theme.video_player_inverseOnSurface","location":"new-player/net.newpipe.newplayer.ui.theme/video_player_inverse-on-surface.html","searchKeys":["video_player_inverseOnSurface","val video_player_inverseOnSurface: Color","net.newpipe.newplayer.ui.theme.video_player_inverseOnSurface"]},{"name":"val video_player_inversePrimary: Color","description":"net.newpipe.newplayer.ui.theme.video_player_inversePrimary","location":"new-player/net.newpipe.newplayer.ui.theme/video_player_inverse-primary.html","searchKeys":["video_player_inversePrimary","val video_player_inversePrimary: Color","net.newpipe.newplayer.ui.theme.video_player_inversePrimary"]},{"name":"val video_player_inverseSurface: Color","description":"net.newpipe.newplayer.ui.theme.video_player_inverseSurface","location":"new-player/net.newpipe.newplayer.ui.theme/video_player_inverse-surface.html","searchKeys":["video_player_inverseSurface","val video_player_inverseSurface: Color","net.newpipe.newplayer.ui.theme.video_player_inverseSurface"]},{"name":"val video_player_onBackground: Color","description":"net.newpipe.newplayer.ui.theme.video_player_onBackground","location":"new-player/net.newpipe.newplayer.ui.theme/video_player_on-background.html","searchKeys":["video_player_onBackground","val video_player_onBackground: Color","net.newpipe.newplayer.ui.theme.video_player_onBackground"]},{"name":"val video_player_onError: Color","description":"net.newpipe.newplayer.ui.theme.video_player_onError","location":"new-player/net.newpipe.newplayer.ui.theme/video_player_on-error.html","searchKeys":["video_player_onError","val video_player_onError: Color","net.newpipe.newplayer.ui.theme.video_player_onError"]},{"name":"val video_player_onErrorContainer: Color","description":"net.newpipe.newplayer.ui.theme.video_player_onErrorContainer","location":"new-player/net.newpipe.newplayer.ui.theme/video_player_on-error-container.html","searchKeys":["video_player_onErrorContainer","val video_player_onErrorContainer: Color","net.newpipe.newplayer.ui.theme.video_player_onErrorContainer"]},{"name":"val video_player_onPrimary: Color","description":"net.newpipe.newplayer.ui.theme.video_player_onPrimary","location":"new-player/net.newpipe.newplayer.ui.theme/video_player_on-primary.html","searchKeys":["video_player_onPrimary","val video_player_onPrimary: Color","net.newpipe.newplayer.ui.theme.video_player_onPrimary"]},{"name":"val video_player_onPrimaryContainer: Color","description":"net.newpipe.newplayer.ui.theme.video_player_onPrimaryContainer","location":"new-player/net.newpipe.newplayer.ui.theme/video_player_on-primary-container.html","searchKeys":["video_player_onPrimaryContainer","val video_player_onPrimaryContainer: Color","net.newpipe.newplayer.ui.theme.video_player_onPrimaryContainer"]},{"name":"val video_player_onSecondary: Color","description":"net.newpipe.newplayer.ui.theme.video_player_onSecondary","location":"new-player/net.newpipe.newplayer.ui.theme/video_player_on-secondary.html","searchKeys":["video_player_onSecondary","val video_player_onSecondary: Color","net.newpipe.newplayer.ui.theme.video_player_onSecondary"]},{"name":"val video_player_onSecondaryContainer: Color","description":"net.newpipe.newplayer.ui.theme.video_player_onSecondaryContainer","location":"new-player/net.newpipe.newplayer.ui.theme/video_player_on-secondary-container.html","searchKeys":["video_player_onSecondaryContainer","val video_player_onSecondaryContainer: Color","net.newpipe.newplayer.ui.theme.video_player_onSecondaryContainer"]},{"name":"val video_player_onSurface: Color","description":"net.newpipe.newplayer.ui.theme.video_player_onSurface","location":"new-player/net.newpipe.newplayer.ui.theme/video_player_on-surface.html","searchKeys":["video_player_onSurface","val video_player_onSurface: Color","net.newpipe.newplayer.ui.theme.video_player_onSurface"]},{"name":"val video_player_onSurfaceVariant: Color","description":"net.newpipe.newplayer.ui.theme.video_player_onSurfaceVariant","location":"new-player/net.newpipe.newplayer.ui.theme/video_player_on-surface-variant.html","searchKeys":["video_player_onSurfaceVariant","val video_player_onSurfaceVariant: Color","net.newpipe.newplayer.ui.theme.video_player_onSurfaceVariant"]},{"name":"val video_player_onTertiary: Color","description":"net.newpipe.newplayer.ui.theme.video_player_onTertiary","location":"new-player/net.newpipe.newplayer.ui.theme/video_player_on-tertiary.html","searchKeys":["video_player_onTertiary","val video_player_onTertiary: Color","net.newpipe.newplayer.ui.theme.video_player_onTertiary"]},{"name":"val video_player_onTertiaryContainer: Color","description":"net.newpipe.newplayer.ui.theme.video_player_onTertiaryContainer","location":"new-player/net.newpipe.newplayer.ui.theme/video_player_on-tertiary-container.html","searchKeys":["video_player_onTertiaryContainer","val video_player_onTertiaryContainer: Color","net.newpipe.newplayer.ui.theme.video_player_onTertiaryContainer"]},{"name":"val video_player_outline: Color","description":"net.newpipe.newplayer.ui.theme.video_player_outline","location":"new-player/net.newpipe.newplayer.ui.theme/video_player_outline.html","searchKeys":["video_player_outline","val video_player_outline: Color","net.newpipe.newplayer.ui.theme.video_player_outline"]},{"name":"val video_player_outlineVariant: Color","description":"net.newpipe.newplayer.ui.theme.video_player_outlineVariant","location":"new-player/net.newpipe.newplayer.ui.theme/video_player_outline-variant.html","searchKeys":["video_player_outlineVariant","val video_player_outlineVariant: Color","net.newpipe.newplayer.ui.theme.video_player_outlineVariant"]},{"name":"val video_player_primary: Color","description":"net.newpipe.newplayer.ui.theme.video_player_primary","location":"new-player/net.newpipe.newplayer.ui.theme/video_player_primary.html","searchKeys":["video_player_primary","val video_player_primary: Color","net.newpipe.newplayer.ui.theme.video_player_primary"]},{"name":"val video_player_primaryContainer: Color","description":"net.newpipe.newplayer.ui.theme.video_player_primaryContainer","location":"new-player/net.newpipe.newplayer.ui.theme/video_player_primary-container.html","searchKeys":["video_player_primaryContainer","val video_player_primaryContainer: Color","net.newpipe.newplayer.ui.theme.video_player_primaryContainer"]},{"name":"val video_player_scrim: Color","description":"net.newpipe.newplayer.ui.theme.video_player_scrim","location":"new-player/net.newpipe.newplayer.ui.theme/video_player_scrim.html","searchKeys":["video_player_scrim","val video_player_scrim: Color","net.newpipe.newplayer.ui.theme.video_player_scrim"]},{"name":"val video_player_secondary: Color","description":"net.newpipe.newplayer.ui.theme.video_player_secondary","location":"new-player/net.newpipe.newplayer.ui.theme/video_player_secondary.html","searchKeys":["video_player_secondary","val video_player_secondary: Color","net.newpipe.newplayer.ui.theme.video_player_secondary"]},{"name":"val video_player_secondaryContainer: Color","description":"net.newpipe.newplayer.ui.theme.video_player_secondaryContainer","location":"new-player/net.newpipe.newplayer.ui.theme/video_player_secondary-container.html","searchKeys":["video_player_secondaryContainer","val video_player_secondaryContainer: Color","net.newpipe.newplayer.ui.theme.video_player_secondaryContainer"]},{"name":"val video_player_shadow: Color","description":"net.newpipe.newplayer.ui.theme.video_player_shadow","location":"new-player/net.newpipe.newplayer.ui.theme/video_player_shadow.html","searchKeys":["video_player_shadow","val video_player_shadow: Color","net.newpipe.newplayer.ui.theme.video_player_shadow"]},{"name":"val video_player_surface: Color","description":"net.newpipe.newplayer.ui.theme.video_player_surface","location":"new-player/net.newpipe.newplayer.ui.theme/video_player_surface.html","searchKeys":["video_player_surface","val video_player_surface: Color","net.newpipe.newplayer.ui.theme.video_player_surface"]},{"name":"val video_player_surfaceTint: Color","description":"net.newpipe.newplayer.ui.theme.video_player_surfaceTint","location":"new-player/net.newpipe.newplayer.ui.theme/video_player_surface-tint.html","searchKeys":["video_player_surfaceTint","val video_player_surfaceTint: Color","net.newpipe.newplayer.ui.theme.video_player_surfaceTint"]},{"name":"val video_player_surfaceVariant: Color","description":"net.newpipe.newplayer.ui.theme.video_player_surfaceVariant","location":"new-player/net.newpipe.newplayer.ui.theme/video_player_surface-variant.html","searchKeys":["video_player_surfaceVariant","val video_player_surfaceVariant: Color","net.newpipe.newplayer.ui.theme.video_player_surfaceVariant"]},{"name":"val video_player_tertiary: Color","description":"net.newpipe.newplayer.ui.theme.video_player_tertiary","location":"new-player/net.newpipe.newplayer.ui.theme/video_player_tertiary.html","searchKeys":["video_player_tertiary","val video_player_tertiary: Color","net.newpipe.newplayer.ui.theme.video_player_tertiary"]},{"name":"val video_player_tertiaryContainer: Color","description":"net.newpipe.newplayer.ui.theme.video_player_tertiaryContainer","location":"new-player/net.newpipe.newplayer.ui.theme/video_player_tertiary-container.html","searchKeys":["video_player_tertiaryContainer","val video_player_tertiaryContainer: Color","net.newpipe.newplayer.ui.theme.video_player_tertiaryContainer"]},{"name":"val width: Int","description":"net.newpipe.newplayer.data.VideoStreamTrack.width","location":"new-player/net.newpipe.newplayer.data/-video-stream-track/width.html","searchKeys":["width","val width: Int","net.newpipe.newplayer.data.VideoStreamTrack.width"]},{"name":"var delayInMS: Long","description":"net.newpipe.newplayer.repository.DelayTestRepository.delayInMS","location":"new-player/net.newpipe.newplayer.repository/-delay-test-repository/delay-in-m-s.html","searchKeys":["delayInMS","var delayInMS: Long","net.newpipe.newplayer.repository.DelayTestRepository.delayInMS"]},{"name":"var disableEagerCaching: Boolean","description":"net.newpipe.newplayer.repository.EagerRequestingRepository.disableEagerCaching","location":"new-player/net.newpipe.newplayer.repository/-eager-requesting-repository/disable-eager-caching.html","searchKeys":["disableEagerCaching","var disableEagerCaching: Boolean","net.newpipe.newplayer.repository.EagerRequestingRepository.disableEagerCaching"]},{"name":"var embeddedPlayerView: NewPlayerView?","description":"net.newpipe.newplayer.ActivityBrainSlug.embeddedPlayerView","location":"new-player/net.newpipe.newplayer/-activity-brain-slug/embedded-player-view.html","searchKeys":["embeddedPlayerView","var embeddedPlayerView: NewPlayerView?","net.newpipe.newplayer.ActivityBrainSlug.embeddedPlayerView"]},{"name":"var fullscreenPlayerView: NewPlayerView?","description":"net.newpipe.newplayer.ActivityBrainSlug.fullscreenPlayerView","location":"new-player/net.newpipe.newplayer/-activity-brain-slug/fullscreen-player-view.html","searchKeys":["fullscreenPlayerView","var fullscreenPlayerView: NewPlayerView?","net.newpipe.newplayer.ActivityBrainSlug.fullscreenPlayerView"]},{"name":"var hasBeenSeenBefore: HashSet<String>","description":"net.newpipe.newplayer.repository.EagerRequestingRepository.hasBeenSeenBefore","location":"new-player/net.newpipe.newplayer.repository/-eager-requesting-repository/has-been-seen-before.html","searchKeys":["hasBeenSeenBefore","var hasBeenSeenBefore: HashSet<String>","net.newpipe.newplayer.repository.EagerRequestingRepository.hasBeenSeenBefore"]},{"name":"var mutableErrorFlow: MutableSharedFlow<Exception>","description":"net.newpipe.newplayer.NewPlayerImpl.mutableErrorFlow","location":"new-player/net.newpipe.newplayer/-new-player-impl/mutable-error-flow.html","searchKeys":["mutableErrorFlow","var mutableErrorFlow: MutableSharedFlow<Exception>","net.newpipe.newplayer.NewPlayerImpl.mutableErrorFlow"]},{"name":"var rootView: View?","description":"net.newpipe.newplayer.ActivityBrainSlug.rootView","location":"new-player/net.newpipe.newplayer/-activity-brain-slug/root-view.html","searchKeys":["rootView","var rootView: View?","net.newpipe.newplayer.ActivityBrainSlug.rootView"]},{"name":"var viewModel: NewPlayerViewModel?","description":"net.newpipe.newplayer.ui.NewPlayerView.viewModel","location":"new-player/net.newpipe.newplayer.ui/-new-player-view/view-model.html","searchKeys":["viewModel","var viewModel: NewPlayerViewModel?","net.newpipe.newplayer.ui.NewPlayerView.viewModel"]}]
